// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: illegalrecord.proto

package com.kedacom.ctsp.cvf.viid.common.protobuf;

public final class IllegalRecordProtobuf {
    private static final com.google.protobuf.Descriptors.Descriptor internal_static_IllegalRecord_Proto_descriptor;
    private static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internal_static_IllegalRecord_Proto_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.FileDescriptor descriptor;

    static {
        String[] descriptorData = {"\n\023illegalrecord.proto\"\252\007\n\023IllegalRecord_"
            + "Proto\022\027\n\017IllegalRecordID\030\001 \001(\t\022\020\n\010Source"
            + "ID\030\002 \001(\t\022\022\n\nTollgateID\030\003 \001(\t\022\020\n\010ShotTime"
            + "\030\004 \001(\004\022\021\n\tShotPlace\030\005 \001(\t\022\022\n\nIllegalAct\030"
            + "\006 \001(\005\022\025\n\rShotPlaceCode\030\007 \001(\t\022\016\n\006LaneNo\030\010"
            + " \001(\005\022\020\n\010HasPlate\030\t \001(\005\022\022\n\nPlateClass\030\n \001"
            + "(\t\022\022\n\nPlateColor\030\013 \001(\t\022\017\n\007PlateNo\030\014 \001(\t\022"
            + "\020\n\010LeftTopX\030\r \001(\005\022\020\n\010LeftTopY\030\016 \001(\005\022\021\n\tR"
            + "ightBtmX\030\017 \001(\005\022\021\n\tRightBtmY\030\020 \001(\005\022\r\n\005Spe"
            + "ed\030\021 \001(\001\022\021\n\tDirection\030\022 \001(\t\022\031\n\021DrivingSt"
            + "atusCode\030\023 \001(\t\022\024\n\014VehicleClass\030\024 \001(\t\022\021\n\t"
            + "ImagePath\030\025 \001(\t\022\022\n\nImagePath2\030\026 \001(\t\022\022\n\nI"
            + "magePath3\030\027 \001(\t\022\022\n\nImagePath4\030\030 \001(\t\022\025\n\rC"
            + "ompImagePath\030\031 \001(\t\022\025\n\rIllegalStatus\030\032 \001("
            + "\005\022\021\n\tEntryTime\030\033 \001(\004\022\022\n\nUpdateTime\030\034 \001(\004"
            + "\022\024\n\014SpeedItvllNo\030\035 \001(\t\022\023\n\013VideoStatus\030\036 "
            + "\001(\005\022\027\n\017CompImageStatus\030\037 \001(\005\022\020\n\010MaxSpeed"
            + "\030  \001(\001\022\021\n\tPassTimes\030! \001(\t\022\022\n\nBackupMark\030"
            + "\" \001(\005\022\031\n\021PlateClassConfirm\030# \001(\t\022\031\n\021Plat"
            + "eColorConfirm\030$ \001(\t\022\026\n\016PlateNoConfirm\030% "
            + "\001(\t\022\031\n\021IllegalActConfirm\030& \001(\005\022\022\n\nErrcor"
            + "Info\030\' \001(\t\022\025\n\rStdIllegalAct\030( \001(\t\022\025\n\rCon"
            + "firmPerson\030) \001(\t\022\023\n\013ConfirmUnit\030* \001(\t\022\026\n"
            + "\016ConfirmComment\030+ \001(\t\022\023\n\013ConfirmTime\030, \001"
            + "(\004BB\n)com.kedacom.ctsp.cvf.viid.common.p" + "rotobufB\025IllegalRecordProtobufb\006proto3"};
        com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
            new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
                public com.google.protobuf.ExtensionRegistry
                    assignDescriptors(com.google.protobuf.Descriptors.FileDescriptor root) {
                    descriptor = root;
                    return null;
                }
            };
        com.google.protobuf.Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(descriptorData,
            new com.google.protobuf.Descriptors.FileDescriptor[] {}, assigner);
        internal_static_IllegalRecord_Proto_descriptor = getDescriptor().getMessageTypes().get(0);
        internal_static_IllegalRecord_Proto_fieldAccessorTable =
            new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_IllegalRecord_Proto_descriptor,
                new String[] {"IllegalRecordID", "SourceID", "TollgateID", "ShotTime", "ShotPlace", "IllegalAct",
                    "ShotPlaceCode", "LaneNo", "HasPlate", "PlateClass", "PlateColor", "PlateNo", "LeftTopX",
                    "LeftTopY", "RightBtmX", "RightBtmY", "Speed", "Direction", "DrivingStatusCode", "VehicleClass",
                    "ImagePath", "ImagePath2", "ImagePath3", "ImagePath4", "CompImagePath", "IllegalStatus",
                    "EntryTime", "UpdateTime", "SpeedItvllNo", "VideoStatus", "CompImageStatus", "MaxSpeed",
                    "PassTimes", "BackupMark", "PlateClassConfirm", "PlateColorConfirm", "PlateNoConfirm",
                    "IllegalActConfirm", "ErrcorInfo", "StdIllegalAct", "ConfirmPerson", "ConfirmUnit",
                    "ConfirmComment", "ConfirmTime",});
    }

    private IllegalRecordProtobuf() {}

    public static void registerAllExtensions(com.google.protobuf.ExtensionRegistryLite registry) {}

    public static void registerAllExtensions(com.google.protobuf.ExtensionRegistry registry) {
        registerAllExtensions((com.google.protobuf.ExtensionRegistryLite)registry);
    }

    public static com.google.protobuf.Descriptors.FileDescriptor getDescriptor() {
        return descriptor;
    }

    public interface IllegalRecord_ProtoOrBuilder extends
        // @@protoc_insertion_point(interface_extends:IllegalRecord_Proto)
        com.google.protobuf.MessageOrBuilder {

        /**
         * <code>string IllegalRecordID = 1;</code>
         */
        String getIllegalRecordID();

        /**
         * <code>string IllegalRecordID = 1;</code>
         */
        com.google.protobuf.ByteString getIllegalRecordIDBytes();

        /**
         * <code>string SourceID = 2;</code>
         */
        String getSourceID();

        /**
         * <code>string SourceID = 2;</code>
         */
        com.google.protobuf.ByteString getSourceIDBytes();

        /**
         * <code>string TollgateID = 3;</code>
         */
        String getTollgateID();

        /**
         * <code>string TollgateID = 3;</code>
         */
        com.google.protobuf.ByteString getTollgateIDBytes();

        /**
         * <code>uint64 ShotTime = 4;</code>
         */
        long getShotTime();

        /**
         * <code>string ShotPlace = 5;</code>
         */
        String getShotPlace();

        /**
         * <code>string ShotPlace = 5;</code>
         */
        com.google.protobuf.ByteString getShotPlaceBytes();

        /**
         * <code>int32 IllegalAct = 6;</code>
         */
        int getIllegalAct();

        /**
         * <code>string ShotPlaceCode = 7;</code>
         */
        String getShotPlaceCode();

        /**
         * <code>string ShotPlaceCode = 7;</code>
         */
        com.google.protobuf.ByteString getShotPlaceCodeBytes();

        /**
         * <code>int32 LaneNo = 8;</code>
         */
        int getLaneNo();

        /**
         * <code>int32 HasPlate = 9;</code>
         */
        int getHasPlate();

        /**
         * <code>string PlateClass = 10;</code>
         */
        String getPlateClass();

        /**
         * <code>string PlateClass = 10;</code>
         */
        com.google.protobuf.ByteString getPlateClassBytes();

        /**
         * <code>string PlateColor = 11;</code>
         */
        String getPlateColor();

        /**
         * <code>string PlateColor = 11;</code>
         */
        com.google.protobuf.ByteString getPlateColorBytes();

        /**
         * <code>string PlateNo = 12;</code>
         */
        String getPlateNo();

        /**
         * <code>string PlateNo = 12;</code>
         */
        com.google.protobuf.ByteString getPlateNoBytes();

        /**
         * <code>int32 LeftTopX = 13;</code>
         */
        int getLeftTopX();

        /**
         * <code>int32 LeftTopY = 14;</code>
         */
        int getLeftTopY();

        /**
         * <code>int32 RightBtmX = 15;</code>
         */
        int getRightBtmX();

        /**
         * <code>int32 RightBtmY = 16;</code>
         */
        int getRightBtmY();

        /**
         * <code>double Speed = 17;</code>
         */
        double getSpeed();

        /**
         * <code>string Direction = 18;</code>
         */
        String getDirection();

        /**
         * <code>string Direction = 18;</code>
         */
        com.google.protobuf.ByteString getDirectionBytes();

        /**
         * <code>string DrivingStatusCode = 19;</code>
         */
        String getDrivingStatusCode();

        /**
         * <code>string DrivingStatusCode = 19;</code>
         */
        com.google.protobuf.ByteString getDrivingStatusCodeBytes();

        /**
         * <code>string VehicleClass = 20;</code>
         */
        String getVehicleClass();

        /**
         * <code>string VehicleClass = 20;</code>
         */
        com.google.protobuf.ByteString getVehicleClassBytes();

        /**
         * <code>string ImagePath = 21;</code>
         */
        String getImagePath();

        /**
         * <code>string ImagePath = 21;</code>
         */
        com.google.protobuf.ByteString getImagePathBytes();

        /**
         * <code>string ImagePath2 = 22;</code>
         */
        String getImagePath2();

        /**
         * <code>string ImagePath2 = 22;</code>
         */
        com.google.protobuf.ByteString getImagePath2Bytes();

        /**
         * <code>string ImagePath3 = 23;</code>
         */
        String getImagePath3();

        /**
         * <code>string ImagePath3 = 23;</code>
         */
        com.google.protobuf.ByteString getImagePath3Bytes();

        /**
         * <code>string ImagePath4 = 24;</code>
         */
        String getImagePath4();

        /**
         * <code>string ImagePath4 = 24;</code>
         */
        com.google.protobuf.ByteString getImagePath4Bytes();

        /**
         * <code>string CompImagePath = 25;</code>
         */
        String getCompImagePath();

        /**
         * <code>string CompImagePath = 25;</code>
         */
        com.google.protobuf.ByteString getCompImagePathBytes();

        /**
         * <code>int32 IllegalStatus = 26;</code>
         */
        int getIllegalStatus();

        /**
         * <code>uint64 EntryTime = 27;</code>
         */
        long getEntryTime();

        /**
         * <code>uint64 UpdateTime = 28;</code>
         */
        long getUpdateTime();

        /**
         * <code>string SpeedItvllNo = 29;</code>
         */
        String getSpeedItvllNo();

        /**
         * <code>string SpeedItvllNo = 29;</code>
         */
        com.google.protobuf.ByteString getSpeedItvllNoBytes();

        /**
         * <code>int32 VideoStatus = 30;</code>
         */
        int getVideoStatus();

        /**
         * <code>int32 CompImageStatus = 31;</code>
         */
        int getCompImageStatus();

        /**
         * <code>double MaxSpeed = 32;</code>
         */
        double getMaxSpeed();

        /**
         * <code>string PassTimes = 33;</code>
         */
        String getPassTimes();

        /**
         * <code>string PassTimes = 33;</code>
         */
        com.google.protobuf.ByteString getPassTimesBytes();

        /**
         * <code>int32 BackupMark = 34;</code>
         */
        int getBackupMark();

        /**
         * <code>string PlateClassConfirm = 35;</code>
         */
        String getPlateClassConfirm();

        /**
         * <code>string PlateClassConfirm = 35;</code>
         */
        com.google.protobuf.ByteString getPlateClassConfirmBytes();

        /**
         * <code>string PlateColorConfirm = 36;</code>
         */
        String getPlateColorConfirm();

        /**
         * <code>string PlateColorConfirm = 36;</code>
         */
        com.google.protobuf.ByteString getPlateColorConfirmBytes();

        /**
         * <code>string PlateNoConfirm = 37;</code>
         */
        String getPlateNoConfirm();

        /**
         * <code>string PlateNoConfirm = 37;</code>
         */
        com.google.protobuf.ByteString getPlateNoConfirmBytes();

        /**
         * <code>int32 IllegalActConfirm = 38;</code>
         */
        int getIllegalActConfirm();

        /**
         * <code>string ErrcorInfo = 39;</code>
         */
        String getErrcorInfo();

        /**
         * <code>string ErrcorInfo = 39;</code>
         */
        com.google.protobuf.ByteString getErrcorInfoBytes();

        /**
         * <code>string StdIllegalAct = 40;</code>
         */
        String getStdIllegalAct();

        /**
         * <code>string StdIllegalAct = 40;</code>
         */
        com.google.protobuf.ByteString getStdIllegalActBytes();

        /**
         * <code>string ConfirmPerson = 41;</code>
         */
        String getConfirmPerson();

        /**
         * <code>string ConfirmPerson = 41;</code>
         */
        com.google.protobuf.ByteString getConfirmPersonBytes();

        /**
         * <code>string ConfirmUnit = 42;</code>
         */
        String getConfirmUnit();

        /**
         * <code>string ConfirmUnit = 42;</code>
         */
        com.google.protobuf.ByteString getConfirmUnitBytes();

        /**
         * <code>string ConfirmComment = 43;</code>
         */
        String getConfirmComment();

        /**
         * <code>string ConfirmComment = 43;</code>
         */
        com.google.protobuf.ByteString getConfirmCommentBytes();

        /**
         * <code>uint64 ConfirmTime = 44;</code>
         */
        long getConfirmTime();
    }

    /**
     * Protobuf type {@code IllegalRecord_Proto}
     */
    public static final class IllegalRecord_Proto extends com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:IllegalRecord_Proto)
        IllegalRecord_ProtoOrBuilder {
        public static final int ILLEGALRECORDID_FIELD_NUMBER = 1;
        public static final int SOURCEID_FIELD_NUMBER = 2;
        public static final int TOLLGATEID_FIELD_NUMBER = 3;
        public static final int SHOTTIME_FIELD_NUMBER = 4;
        public static final int SHOTPLACE_FIELD_NUMBER = 5;
        public static final int ILLEGALACT_FIELD_NUMBER = 6;
        public static final int SHOTPLACECODE_FIELD_NUMBER = 7;
        public static final int LANENO_FIELD_NUMBER = 8;
        public static final int HASPLATE_FIELD_NUMBER = 9;
        public static final int PLATECLASS_FIELD_NUMBER = 10;
        public static final int PLATECOLOR_FIELD_NUMBER = 11;
        public static final int PLATENO_FIELD_NUMBER = 12;
        public static final int LEFTTOPX_FIELD_NUMBER = 13;
        public static final int LEFTTOPY_FIELD_NUMBER = 14;
        public static final int RIGHTBTMX_FIELD_NUMBER = 15;
        public static final int RIGHTBTMY_FIELD_NUMBER = 16;
        public static final int SPEED_FIELD_NUMBER = 17;
        public static final int DIRECTION_FIELD_NUMBER = 18;
        public static final int DRIVINGSTATUSCODE_FIELD_NUMBER = 19;
        public static final int VEHICLECLASS_FIELD_NUMBER = 20;
        public static final int IMAGEPATH_FIELD_NUMBER = 21;
        public static final int IMAGEPATH2_FIELD_NUMBER = 22;
        public static final int IMAGEPATH3_FIELD_NUMBER = 23;
        public static final int IMAGEPATH4_FIELD_NUMBER = 24;
        public static final int COMPIMAGEPATH_FIELD_NUMBER = 25;
        public static final int ILLEGALSTATUS_FIELD_NUMBER = 26;
        public static final int ENTRYTIME_FIELD_NUMBER = 27;
        public static final int UPDATETIME_FIELD_NUMBER = 28;
        public static final int SPEEDITVLLNO_FIELD_NUMBER = 29;
        public static final int VIDEOSTATUS_FIELD_NUMBER = 30;
        public static final int COMPIMAGESTATUS_FIELD_NUMBER = 31;
        public static final int MAXSPEED_FIELD_NUMBER = 32;
        public static final int PASSTIMES_FIELD_NUMBER = 33;
        public static final int BACKUPMARK_FIELD_NUMBER = 34;
        public static final int PLATECLASSCONFIRM_FIELD_NUMBER = 35;
        public static final int PLATECOLORCONFIRM_FIELD_NUMBER = 36;
        public static final int PLATENOCONFIRM_FIELD_NUMBER = 37;
        public static final int ILLEGALACTCONFIRM_FIELD_NUMBER = 38;
        public static final int ERRCORINFO_FIELD_NUMBER = 39;
        public static final int STDILLEGALACT_FIELD_NUMBER = 40;
        public static final int CONFIRMPERSON_FIELD_NUMBER = 41;
        public static final int CONFIRMUNIT_FIELD_NUMBER = 42;
        public static final int CONFIRMCOMMENT_FIELD_NUMBER = 43;
        public static final int CONFIRMTIME_FIELD_NUMBER = 44;
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:IllegalRecord_Proto)
        private static final IllegalRecord_Proto DEFAULT_INSTANCE;
        private static final com.google.protobuf.Parser<IllegalRecord_Proto> PARSER =
            new com.google.protobuf.AbstractParser<IllegalRecord_Proto>() {
                public IllegalRecord_Proto parsePartialFrom(com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                    return new IllegalRecord_Proto(input, extensionRegistry);
                }
            };

        static {
            DEFAULT_INSTANCE = new IllegalRecord_Proto();
        }

        private volatile Object illegalRecordID_;
        private volatile Object sourceID_;
        private volatile Object tollgateID_;
        private long shotTime_;
        private volatile Object shotPlace_;
        private int illegalAct_;
        private volatile Object shotPlaceCode_;
        private int laneNo_;
        private int hasPlate_;
        private volatile Object plateClass_;
        private volatile Object plateColor_;
        private volatile Object plateNo_;
        private int leftTopX_;
        private int leftTopY_;
        private int rightBtmX_;
        private int rightBtmY_;
        private double speed_;
        private volatile Object direction_;
        private volatile Object drivingStatusCode_;
        private volatile Object vehicleClass_;
        private volatile Object imagePath_;
        private volatile Object imagePath2_;
        private volatile Object imagePath3_;
        private volatile Object imagePath4_;
        private volatile Object compImagePath_;
        private int illegalStatus_;
        private long entryTime_;
        private long updateTime_;
        private volatile Object speedItvllNo_;
        private int videoStatus_;
        private int compImageStatus_;
        private double maxSpeed_;
        private volatile Object passTimes_;
        private int backupMark_;
        private volatile Object plateClassConfirm_;
        private volatile Object plateColorConfirm_;
        private volatile Object plateNoConfirm_;
        private int illegalActConfirm_;
        private volatile Object errcorInfo_;
        private volatile Object stdIllegalAct_;
        private volatile Object confirmPerson_;
        private volatile Object confirmUnit_;
        private volatile Object confirmComment_;
        private long confirmTime_;
        private byte memoizedIsInitialized = -1;

        // Use IllegalRecord_Proto.newBuilder() to construct.
        private IllegalRecord_Proto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private IllegalRecord_Proto() {
            illegalRecordID_ = "";
            sourceID_ = "";
            tollgateID_ = "";
            shotTime_ = 0L;
            shotPlace_ = "";
            illegalAct_ = 0;
            shotPlaceCode_ = "";
            laneNo_ = 0;
            hasPlate_ = 0;
            plateClass_ = "";
            plateColor_ = "";
            plateNo_ = "";
            leftTopX_ = 0;
            leftTopY_ = 0;
            rightBtmX_ = 0;
            rightBtmY_ = 0;
            speed_ = 0D;
            direction_ = "";
            drivingStatusCode_ = "";
            vehicleClass_ = "";
            imagePath_ = "";
            imagePath2_ = "";
            imagePath3_ = "";
            imagePath4_ = "";
            compImagePath_ = "";
            illegalStatus_ = 0;
            entryTime_ = 0L;
            updateTime_ = 0L;
            speedItvllNo_ = "";
            videoStatus_ = 0;
            compImageStatus_ = 0;
            maxSpeed_ = 0D;
            passTimes_ = "";
            backupMark_ = 0;
            plateClassConfirm_ = "";
            plateColorConfirm_ = "";
            plateNoConfirm_ = "";
            illegalActConfirm_ = 0;
            errcorInfo_ = "";
            stdIllegalAct_ = "";
            confirmPerson_ = "";
            confirmUnit_ = "";
            confirmComment_ = "";
            confirmTime_ = 0L;
        }

        private IllegalRecord_Proto(com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new NullPointerException();
            }
            int mutable_bitField0_ = 0;
            int mutable_bitField1_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownFieldProto3(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            String s = input.readStringRequireUtf8();

                            illegalRecordID_ = s;
                            break;
                        }
                        case 18: {
                            String s = input.readStringRequireUtf8();

                            sourceID_ = s;
                            break;
                        }
                        case 26: {
                            String s = input.readStringRequireUtf8();

                            tollgateID_ = s;
                            break;
                        }
                        case 32: {

                            shotTime_ = input.readUInt64();
                            break;
                        }
                        case 42: {
                            String s = input.readStringRequireUtf8();

                            shotPlace_ = s;
                            break;
                        }
                        case 48: {

                            illegalAct_ = input.readInt32();
                            break;
                        }
                        case 58: {
                            String s = input.readStringRequireUtf8();

                            shotPlaceCode_ = s;
                            break;
                        }
                        case 64: {

                            laneNo_ = input.readInt32();
                            break;
                        }
                        case 72: {

                            hasPlate_ = input.readInt32();
                            break;
                        }
                        case 82: {
                            String s = input.readStringRequireUtf8();

                            plateClass_ = s;
                            break;
                        }
                        case 90: {
                            String s = input.readStringRequireUtf8();

                            plateColor_ = s;
                            break;
                        }
                        case 98: {
                            String s = input.readStringRequireUtf8();

                            plateNo_ = s;
                            break;
                        }
                        case 104: {

                            leftTopX_ = input.readInt32();
                            break;
                        }
                        case 112: {

                            leftTopY_ = input.readInt32();
                            break;
                        }
                        case 120: {

                            rightBtmX_ = input.readInt32();
                            break;
                        }
                        case 128: {

                            rightBtmY_ = input.readInt32();
                            break;
                        }
                        case 137: {

                            speed_ = input.readDouble();
                            break;
                        }
                        case 146: {
                            String s = input.readStringRequireUtf8();

                            direction_ = s;
                            break;
                        }
                        case 154: {
                            String s = input.readStringRequireUtf8();

                            drivingStatusCode_ = s;
                            break;
                        }
                        case 162: {
                            String s = input.readStringRequireUtf8();

                            vehicleClass_ = s;
                            break;
                        }
                        case 170: {
                            String s = input.readStringRequireUtf8();

                            imagePath_ = s;
                            break;
                        }
                        case 178: {
                            String s = input.readStringRequireUtf8();

                            imagePath2_ = s;
                            break;
                        }
                        case 186: {
                            String s = input.readStringRequireUtf8();

                            imagePath3_ = s;
                            break;
                        }
                        case 194: {
                            String s = input.readStringRequireUtf8();

                            imagePath4_ = s;
                            break;
                        }
                        case 202: {
                            String s = input.readStringRequireUtf8();

                            compImagePath_ = s;
                            break;
                        }
                        case 208: {

                            illegalStatus_ = input.readInt32();
                            break;
                        }
                        case 216: {

                            entryTime_ = input.readUInt64();
                            break;
                        }
                        case 224: {

                            updateTime_ = input.readUInt64();
                            break;
                        }
                        case 234: {
                            String s = input.readStringRequireUtf8();

                            speedItvllNo_ = s;
                            break;
                        }
                        case 240: {

                            videoStatus_ = input.readInt32();
                            break;
                        }
                        case 248: {

                            compImageStatus_ = input.readInt32();
                            break;
                        }
                        case 257: {

                            maxSpeed_ = input.readDouble();
                            break;
                        }
                        case 266: {
                            String s = input.readStringRequireUtf8();

                            passTimes_ = s;
                            break;
                        }
                        case 272: {

                            backupMark_ = input.readInt32();
                            break;
                        }
                        case 282: {
                            String s = input.readStringRequireUtf8();

                            plateClassConfirm_ = s;
                            break;
                        }
                        case 290: {
                            String s = input.readStringRequireUtf8();

                            plateColorConfirm_ = s;
                            break;
                        }
                        case 298: {
                            String s = input.readStringRequireUtf8();

                            plateNoConfirm_ = s;
                            break;
                        }
                        case 304: {

                            illegalActConfirm_ = input.readInt32();
                            break;
                        }
                        case 314: {
                            String s = input.readStringRequireUtf8();

                            errcorInfo_ = s;
                            break;
                        }
                        case 322: {
                            String s = input.readStringRequireUtf8();

                            stdIllegalAct_ = s;
                            break;
                        }
                        case 330: {
                            String s = input.readStringRequireUtf8();

                            confirmPerson_ = s;
                            break;
                        }
                        case 338: {
                            String s = input.readStringRequireUtf8();

                            confirmUnit_ = s;
                            break;
                        }
                        case 346: {
                            String s = input.readStringRequireUtf8();

                            confirmComment_ = s;
                            break;
                        }
                        case 352: {

                            confirmTime_ = input.readUInt64();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
            return IllegalRecordProtobuf.internal_static_IllegalRecord_Proto_descriptor;
        }

        public static IllegalRecord_Proto parseFrom(java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static IllegalRecord_Proto parseFrom(java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static IllegalRecord_Proto parseFrom(com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static IllegalRecord_Proto parseFrom(com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static IllegalRecord_Proto parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static IllegalRecord_Proto parseFrom(byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static IllegalRecord_Proto parseFrom(java.io.InputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
        }

        public static IllegalRecord_Proto parseFrom(java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static IllegalRecord_Proto parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
        }

        public static IllegalRecord_Proto parseDelimitedFrom(java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input,
                extensionRegistry);
        }

        public static IllegalRecord_Proto parseFrom(com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
        }

        public static IllegalRecord_Proto parseFrom(com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(IllegalRecord_Proto prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static IllegalRecord_Proto getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<IllegalRecord_Proto> parser() {
            return PARSER;
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        protected FieldAccessorTable internalGetFieldAccessorTable() {
            return IllegalRecordProtobuf.internal_static_IllegalRecord_Proto_fieldAccessorTable
                .ensureFieldAccessorsInitialized(IllegalRecord_Proto.class, Builder.class);
        }

        /**
         * <code>string IllegalRecordID = 1;</code>
         */
        public String getIllegalRecordID() {
            Object ref = illegalRecordID_;
            if (ref instanceof String) {
                return (String)ref;
            } else {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                String s = bs.toStringUtf8();
                illegalRecordID_ = s;
                return s;
            }
        }

        /**
         * <code>string IllegalRecordID = 1;</code>
         */
        public com.google.protobuf.ByteString getIllegalRecordIDBytes() {
            Object ref = illegalRecordID_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                illegalRecordID_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString)ref;
            }
        }

        /**
         * <code>string SourceID = 2;</code>
         */
        public String getSourceID() {
            Object ref = sourceID_;
            if (ref instanceof String) {
                return (String)ref;
            } else {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                String s = bs.toStringUtf8();
                sourceID_ = s;
                return s;
            }
        }

        /**
         * <code>string SourceID = 2;</code>
         */
        public com.google.protobuf.ByteString getSourceIDBytes() {
            Object ref = sourceID_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                sourceID_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString)ref;
            }
        }

        /**
         * <code>string TollgateID = 3;</code>
         */
        public String getTollgateID() {
            Object ref = tollgateID_;
            if (ref instanceof String) {
                return (String)ref;
            } else {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                String s = bs.toStringUtf8();
                tollgateID_ = s;
                return s;
            }
        }

        /**
         * <code>string TollgateID = 3;</code>
         */
        public com.google.protobuf.ByteString getTollgateIDBytes() {
            Object ref = tollgateID_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                tollgateID_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString)ref;
            }
        }

        /**
         * <code>uint64 ShotTime = 4;</code>
         */
        public long getShotTime() {
            return shotTime_;
        }

        /**
         * <code>string ShotPlace = 5;</code>
         */
        public String getShotPlace() {
            Object ref = shotPlace_;
            if (ref instanceof String) {
                return (String)ref;
            } else {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                String s = bs.toStringUtf8();
                shotPlace_ = s;
                return s;
            }
        }

        /**
         * <code>string ShotPlace = 5;</code>
         */
        public com.google.protobuf.ByteString getShotPlaceBytes() {
            Object ref = shotPlace_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                shotPlace_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString)ref;
            }
        }

        /**
         * <code>int32 IllegalAct = 6;</code>
         */
        public int getIllegalAct() {
            return illegalAct_;
        }

        /**
         * <code>string ShotPlaceCode = 7;</code>
         */
        public String getShotPlaceCode() {
            Object ref = shotPlaceCode_;
            if (ref instanceof String) {
                return (String)ref;
            } else {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                String s = bs.toStringUtf8();
                shotPlaceCode_ = s;
                return s;
            }
        }

        /**
         * <code>string ShotPlaceCode = 7;</code>
         */
        public com.google.protobuf.ByteString getShotPlaceCodeBytes() {
            Object ref = shotPlaceCode_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                shotPlaceCode_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString)ref;
            }
        }

        /**
         * <code>int32 LaneNo = 8;</code>
         */
        public int getLaneNo() {
            return laneNo_;
        }

        /**
         * <code>int32 HasPlate = 9;</code>
         */
        public int getHasPlate() {
            return hasPlate_;
        }

        /**
         * <code>string PlateClass = 10;</code>
         */
        public String getPlateClass() {
            Object ref = plateClass_;
            if (ref instanceof String) {
                return (String)ref;
            } else {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                String s = bs.toStringUtf8();
                plateClass_ = s;
                return s;
            }
        }

        /**
         * <code>string PlateClass = 10;</code>
         */
        public com.google.protobuf.ByteString getPlateClassBytes() {
            Object ref = plateClass_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                plateClass_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString)ref;
            }
        }

        /**
         * <code>string PlateColor = 11;</code>
         */
        public String getPlateColor() {
            Object ref = plateColor_;
            if (ref instanceof String) {
                return (String)ref;
            } else {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                String s = bs.toStringUtf8();
                plateColor_ = s;
                return s;
            }
        }

        /**
         * <code>string PlateColor = 11;</code>
         */
        public com.google.protobuf.ByteString getPlateColorBytes() {
            Object ref = plateColor_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                plateColor_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString)ref;
            }
        }

        /**
         * <code>string PlateNo = 12;</code>
         */
        public String getPlateNo() {
            Object ref = plateNo_;
            if (ref instanceof String) {
                return (String)ref;
            } else {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                String s = bs.toStringUtf8();
                plateNo_ = s;
                return s;
            }
        }

        /**
         * <code>string PlateNo = 12;</code>
         */
        public com.google.protobuf.ByteString getPlateNoBytes() {
            Object ref = plateNo_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                plateNo_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString)ref;
            }
        }

        /**
         * <code>int32 LeftTopX = 13;</code>
         */
        public int getLeftTopX() {
            return leftTopX_;
        }

        /**
         * <code>int32 LeftTopY = 14;</code>
         */
        public int getLeftTopY() {
            return leftTopY_;
        }

        /**
         * <code>int32 RightBtmX = 15;</code>
         */
        public int getRightBtmX() {
            return rightBtmX_;
        }

        /**
         * <code>int32 RightBtmY = 16;</code>
         */
        public int getRightBtmY() {
            return rightBtmY_;
        }

        /**
         * <code>double Speed = 17;</code>
         */
        public double getSpeed() {
            return speed_;
        }

        /**
         * <code>string Direction = 18;</code>
         */
        public String getDirection() {
            Object ref = direction_;
            if (ref instanceof String) {
                return (String)ref;
            } else {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                String s = bs.toStringUtf8();
                direction_ = s;
                return s;
            }
        }

        /**
         * <code>string Direction = 18;</code>
         */
        public com.google.protobuf.ByteString getDirectionBytes() {
            Object ref = direction_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                direction_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString)ref;
            }
        }

        /**
         * <code>string DrivingStatusCode = 19;</code>
         */
        public String getDrivingStatusCode() {
            Object ref = drivingStatusCode_;
            if (ref instanceof String) {
                return (String)ref;
            } else {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                String s = bs.toStringUtf8();
                drivingStatusCode_ = s;
                return s;
            }
        }

        /**
         * <code>string DrivingStatusCode = 19;</code>
         */
        public com.google.protobuf.ByteString getDrivingStatusCodeBytes() {
            Object ref = drivingStatusCode_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                drivingStatusCode_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString)ref;
            }
        }

        /**
         * <code>string VehicleClass = 20;</code>
         */
        public String getVehicleClass() {
            Object ref = vehicleClass_;
            if (ref instanceof String) {
                return (String)ref;
            } else {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                String s = bs.toStringUtf8();
                vehicleClass_ = s;
                return s;
            }
        }

        /**
         * <code>string VehicleClass = 20;</code>
         */
        public com.google.protobuf.ByteString getVehicleClassBytes() {
            Object ref = vehicleClass_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                vehicleClass_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString)ref;
            }
        }

        /**
         * <code>string ImagePath = 21;</code>
         */
        public String getImagePath() {
            Object ref = imagePath_;
            if (ref instanceof String) {
                return (String)ref;
            } else {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                String s = bs.toStringUtf8();
                imagePath_ = s;
                return s;
            }
        }

        /**
         * <code>string ImagePath = 21;</code>
         */
        public com.google.protobuf.ByteString getImagePathBytes() {
            Object ref = imagePath_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                imagePath_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString)ref;
            }
        }

        /**
         * <code>string ImagePath2 = 22;</code>
         */
        public String getImagePath2() {
            Object ref = imagePath2_;
            if (ref instanceof String) {
                return (String)ref;
            } else {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                String s = bs.toStringUtf8();
                imagePath2_ = s;
                return s;
            }
        }

        /**
         * <code>string ImagePath2 = 22;</code>
         */
        public com.google.protobuf.ByteString getImagePath2Bytes() {
            Object ref = imagePath2_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                imagePath2_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString)ref;
            }
        }

        /**
         * <code>string ImagePath3 = 23;</code>
         */
        public String getImagePath3() {
            Object ref = imagePath3_;
            if (ref instanceof String) {
                return (String)ref;
            } else {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                String s = bs.toStringUtf8();
                imagePath3_ = s;
                return s;
            }
        }

        /**
         * <code>string ImagePath3 = 23;</code>
         */
        public com.google.protobuf.ByteString getImagePath3Bytes() {
            Object ref = imagePath3_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                imagePath3_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString)ref;
            }
        }

        /**
         * <code>string ImagePath4 = 24;</code>
         */
        public String getImagePath4() {
            Object ref = imagePath4_;
            if (ref instanceof String) {
                return (String)ref;
            } else {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                String s = bs.toStringUtf8();
                imagePath4_ = s;
                return s;
            }
        }

        /**
         * <code>string ImagePath4 = 24;</code>
         */
        public com.google.protobuf.ByteString getImagePath4Bytes() {
            Object ref = imagePath4_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                imagePath4_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString)ref;
            }
        }

        /**
         * <code>string CompImagePath = 25;</code>
         */
        public String getCompImagePath() {
            Object ref = compImagePath_;
            if (ref instanceof String) {
                return (String)ref;
            } else {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                String s = bs.toStringUtf8();
                compImagePath_ = s;
                return s;
            }
        }

        /**
         * <code>string CompImagePath = 25;</code>
         */
        public com.google.protobuf.ByteString getCompImagePathBytes() {
            Object ref = compImagePath_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                compImagePath_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString)ref;
            }
        }

        /**
         * <code>int32 IllegalStatus = 26;</code>
         */
        public int getIllegalStatus() {
            return illegalStatus_;
        }

        /**
         * <code>uint64 EntryTime = 27;</code>
         */
        public long getEntryTime() {
            return entryTime_;
        }

        /**
         * <code>uint64 UpdateTime = 28;</code>
         */
        public long getUpdateTime() {
            return updateTime_;
        }

        /**
         * <code>string SpeedItvllNo = 29;</code>
         */
        public String getSpeedItvllNo() {
            Object ref = speedItvllNo_;
            if (ref instanceof String) {
                return (String)ref;
            } else {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                String s = bs.toStringUtf8();
                speedItvllNo_ = s;
                return s;
            }
        }

        /**
         * <code>string SpeedItvllNo = 29;</code>
         */
        public com.google.protobuf.ByteString getSpeedItvllNoBytes() {
            Object ref = speedItvllNo_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                speedItvllNo_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString)ref;
            }
        }

        /**
         * <code>int32 VideoStatus = 30;</code>
         */
        public int getVideoStatus() {
            return videoStatus_;
        }

        /**
         * <code>int32 CompImageStatus = 31;</code>
         */
        public int getCompImageStatus() {
            return compImageStatus_;
        }

        /**
         * <code>double MaxSpeed = 32;</code>
         */
        public double getMaxSpeed() {
            return maxSpeed_;
        }

        /**
         * <code>string PassTimes = 33;</code>
         */
        public String getPassTimes() {
            Object ref = passTimes_;
            if (ref instanceof String) {
                return (String)ref;
            } else {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                String s = bs.toStringUtf8();
                passTimes_ = s;
                return s;
            }
        }

        /**
         * <code>string PassTimes = 33;</code>
         */
        public com.google.protobuf.ByteString getPassTimesBytes() {
            Object ref = passTimes_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                passTimes_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString)ref;
            }
        }

        /**
         * <code>int32 BackupMark = 34;</code>
         */
        public int getBackupMark() {
            return backupMark_;
        }

        /**
         * <code>string PlateClassConfirm = 35;</code>
         */
        public String getPlateClassConfirm() {
            Object ref = plateClassConfirm_;
            if (ref instanceof String) {
                return (String)ref;
            } else {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                String s = bs.toStringUtf8();
                plateClassConfirm_ = s;
                return s;
            }
        }

        /**
         * <code>string PlateClassConfirm = 35;</code>
         */
        public com.google.protobuf.ByteString getPlateClassConfirmBytes() {
            Object ref = plateClassConfirm_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                plateClassConfirm_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString)ref;
            }
        }

        /**
         * <code>string PlateColorConfirm = 36;</code>
         */
        public String getPlateColorConfirm() {
            Object ref = plateColorConfirm_;
            if (ref instanceof String) {
                return (String)ref;
            } else {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                String s = bs.toStringUtf8();
                plateColorConfirm_ = s;
                return s;
            }
        }

        /**
         * <code>string PlateColorConfirm = 36;</code>
         */
        public com.google.protobuf.ByteString getPlateColorConfirmBytes() {
            Object ref = plateColorConfirm_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                plateColorConfirm_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString)ref;
            }
        }

        /**
         * <code>string PlateNoConfirm = 37;</code>
         */
        public String getPlateNoConfirm() {
            Object ref = plateNoConfirm_;
            if (ref instanceof String) {
                return (String)ref;
            } else {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                String s = bs.toStringUtf8();
                plateNoConfirm_ = s;
                return s;
            }
        }

        /**
         * <code>string PlateNoConfirm = 37;</code>
         */
        public com.google.protobuf.ByteString getPlateNoConfirmBytes() {
            Object ref = plateNoConfirm_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                plateNoConfirm_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString)ref;
            }
        }

        /**
         * <code>int32 IllegalActConfirm = 38;</code>
         */
        public int getIllegalActConfirm() {
            return illegalActConfirm_;
        }

        /**
         * <code>string ErrcorInfo = 39;</code>
         */
        public String getErrcorInfo() {
            Object ref = errcorInfo_;
            if (ref instanceof String) {
                return (String)ref;
            } else {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                String s = bs.toStringUtf8();
                errcorInfo_ = s;
                return s;
            }
        }

        /**
         * <code>string ErrcorInfo = 39;</code>
         */
        public com.google.protobuf.ByteString getErrcorInfoBytes() {
            Object ref = errcorInfo_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                errcorInfo_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString)ref;
            }
        }

        /**
         * <code>string StdIllegalAct = 40;</code>
         */
        public String getStdIllegalAct() {
            Object ref = stdIllegalAct_;
            if (ref instanceof String) {
                return (String)ref;
            } else {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                String s = bs.toStringUtf8();
                stdIllegalAct_ = s;
                return s;
            }
        }

        /**
         * <code>string StdIllegalAct = 40;</code>
         */
        public com.google.protobuf.ByteString getStdIllegalActBytes() {
            Object ref = stdIllegalAct_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                stdIllegalAct_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString)ref;
            }
        }

        /**
         * <code>string ConfirmPerson = 41;</code>
         */
        public String getConfirmPerson() {
            Object ref = confirmPerson_;
            if (ref instanceof String) {
                return (String)ref;
            } else {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                String s = bs.toStringUtf8();
                confirmPerson_ = s;
                return s;
            }
        }

        /**
         * <code>string ConfirmPerson = 41;</code>
         */
        public com.google.protobuf.ByteString getConfirmPersonBytes() {
            Object ref = confirmPerson_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                confirmPerson_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString)ref;
            }
        }

        /**
         * <code>string ConfirmUnit = 42;</code>
         */
        public String getConfirmUnit() {
            Object ref = confirmUnit_;
            if (ref instanceof String) {
                return (String)ref;
            } else {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                String s = bs.toStringUtf8();
                confirmUnit_ = s;
                return s;
            }
        }

        /**
         * <code>string ConfirmUnit = 42;</code>
         */
        public com.google.protobuf.ByteString getConfirmUnitBytes() {
            Object ref = confirmUnit_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                confirmUnit_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString)ref;
            }
        }

        /**
         * <code>string ConfirmComment = 43;</code>
         */
        public String getConfirmComment() {
            Object ref = confirmComment_;
            if (ref instanceof String) {
                return (String)ref;
            } else {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                String s = bs.toStringUtf8();
                confirmComment_ = s;
                return s;
            }
        }

        /**
         * <code>string ConfirmComment = 43;</code>
         */
        public com.google.protobuf.ByteString getConfirmCommentBytes() {
            Object ref = confirmComment_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                confirmComment_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString)ref;
            }
        }

        /**
         * <code>uint64 ConfirmTime = 44;</code>
         */
        public long getConfirmTime() {
            return confirmTime_;
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1)
                return true;
            if (isInitialized == 0)
                return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
            if (!getIllegalRecordIDBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, illegalRecordID_);
            }
            if (!getSourceIDBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 2, sourceID_);
            }
            if (!getTollgateIDBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 3, tollgateID_);
            }
            if (shotTime_ != 0L) {
                output.writeUInt64(4, shotTime_);
            }
            if (!getShotPlaceBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 5, shotPlace_);
            }
            if (illegalAct_ != 0) {
                output.writeInt32(6, illegalAct_);
            }
            if (!getShotPlaceCodeBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 7, shotPlaceCode_);
            }
            if (laneNo_ != 0) {
                output.writeInt32(8, laneNo_);
            }
            if (hasPlate_ != 0) {
                output.writeInt32(9, hasPlate_);
            }
            if (!getPlateClassBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 10, plateClass_);
            }
            if (!getPlateColorBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 11, plateColor_);
            }
            if (!getPlateNoBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 12, plateNo_);
            }
            if (leftTopX_ != 0) {
                output.writeInt32(13, leftTopX_);
            }
            if (leftTopY_ != 0) {
                output.writeInt32(14, leftTopY_);
            }
            if (rightBtmX_ != 0) {
                output.writeInt32(15, rightBtmX_);
            }
            if (rightBtmY_ != 0) {
                output.writeInt32(16, rightBtmY_);
            }
            if (speed_ != 0D) {
                output.writeDouble(17, speed_);
            }
            if (!getDirectionBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 18, direction_);
            }
            if (!getDrivingStatusCodeBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 19, drivingStatusCode_);
            }
            if (!getVehicleClassBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 20, vehicleClass_);
            }
            if (!getImagePathBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 21, imagePath_);
            }
            if (!getImagePath2Bytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 22, imagePath2_);
            }
            if (!getImagePath3Bytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 23, imagePath3_);
            }
            if (!getImagePath4Bytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 24, imagePath4_);
            }
            if (!getCompImagePathBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 25, compImagePath_);
            }
            if (illegalStatus_ != 0) {
                output.writeInt32(26, illegalStatus_);
            }
            if (entryTime_ != 0L) {
                output.writeUInt64(27, entryTime_);
            }
            if (updateTime_ != 0L) {
                output.writeUInt64(28, updateTime_);
            }
            if (!getSpeedItvllNoBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 29, speedItvllNo_);
            }
            if (videoStatus_ != 0) {
                output.writeInt32(30, videoStatus_);
            }
            if (compImageStatus_ != 0) {
                output.writeInt32(31, compImageStatus_);
            }
            if (maxSpeed_ != 0D) {
                output.writeDouble(32, maxSpeed_);
            }
            if (!getPassTimesBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 33, passTimes_);
            }
            if (backupMark_ != 0) {
                output.writeInt32(34, backupMark_);
            }
            if (!getPlateClassConfirmBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 35, plateClassConfirm_);
            }
            if (!getPlateColorConfirmBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 36, plateColorConfirm_);
            }
            if (!getPlateNoConfirmBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 37, plateNoConfirm_);
            }
            if (illegalActConfirm_ != 0) {
                output.writeInt32(38, illegalActConfirm_);
            }
            if (!getErrcorInfoBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 39, errcorInfo_);
            }
            if (!getStdIllegalActBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 40, stdIllegalAct_);
            }
            if (!getConfirmPersonBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 41, confirmPerson_);
            }
            if (!getConfirmUnitBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 42, confirmUnit_);
            }
            if (!getConfirmCommentBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 43, confirmComment_);
            }
            if (confirmTime_ != 0L) {
                output.writeUInt64(44, confirmTime_);
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1)
                return size;

            size = 0;
            if (!getIllegalRecordIDBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, illegalRecordID_);
            }
            if (!getSourceIDBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, sourceID_);
            }
            if (!getTollgateIDBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, tollgateID_);
            }
            if (shotTime_ != 0L) {
                size += com.google.protobuf.CodedOutputStream.computeUInt64Size(4, shotTime_);
            }
            if (!getShotPlaceBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, shotPlace_);
            }
            if (illegalAct_ != 0) {
                size += com.google.protobuf.CodedOutputStream.computeInt32Size(6, illegalAct_);
            }
            if (!getShotPlaceCodeBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, shotPlaceCode_);
            }
            if (laneNo_ != 0) {
                size += com.google.protobuf.CodedOutputStream.computeInt32Size(8, laneNo_);
            }
            if (hasPlate_ != 0) {
                size += com.google.protobuf.CodedOutputStream.computeInt32Size(9, hasPlate_);
            }
            if (!getPlateClassBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, plateClass_);
            }
            if (!getPlateColorBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, plateColor_);
            }
            if (!getPlateNoBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, plateNo_);
            }
            if (leftTopX_ != 0) {
                size += com.google.protobuf.CodedOutputStream.computeInt32Size(13, leftTopX_);
            }
            if (leftTopY_ != 0) {
                size += com.google.protobuf.CodedOutputStream.computeInt32Size(14, leftTopY_);
            }
            if (rightBtmX_ != 0) {
                size += com.google.protobuf.CodedOutputStream.computeInt32Size(15, rightBtmX_);
            }
            if (rightBtmY_ != 0) {
                size += com.google.protobuf.CodedOutputStream.computeInt32Size(16, rightBtmY_);
            }
            if (speed_ != 0D) {
                size += com.google.protobuf.CodedOutputStream.computeDoubleSize(17, speed_);
            }
            if (!getDirectionBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(18, direction_);
            }
            if (!getDrivingStatusCodeBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(19, drivingStatusCode_);
            }
            if (!getVehicleClassBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(20, vehicleClass_);
            }
            if (!getImagePathBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(21, imagePath_);
            }
            if (!getImagePath2Bytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(22, imagePath2_);
            }
            if (!getImagePath3Bytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(23, imagePath3_);
            }
            if (!getImagePath4Bytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(24, imagePath4_);
            }
            if (!getCompImagePathBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(25, compImagePath_);
            }
            if (illegalStatus_ != 0) {
                size += com.google.protobuf.CodedOutputStream.computeInt32Size(26, illegalStatus_);
            }
            if (entryTime_ != 0L) {
                size += com.google.protobuf.CodedOutputStream.computeUInt64Size(27, entryTime_);
            }
            if (updateTime_ != 0L) {
                size += com.google.protobuf.CodedOutputStream.computeUInt64Size(28, updateTime_);
            }
            if (!getSpeedItvllNoBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(29, speedItvllNo_);
            }
            if (videoStatus_ != 0) {
                size += com.google.protobuf.CodedOutputStream.computeInt32Size(30, videoStatus_);
            }
            if (compImageStatus_ != 0) {
                size += com.google.protobuf.CodedOutputStream.computeInt32Size(31, compImageStatus_);
            }
            if (maxSpeed_ != 0D) {
                size += com.google.protobuf.CodedOutputStream.computeDoubleSize(32, maxSpeed_);
            }
            if (!getPassTimesBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(33, passTimes_);
            }
            if (backupMark_ != 0) {
                size += com.google.protobuf.CodedOutputStream.computeInt32Size(34, backupMark_);
            }
            if (!getPlateClassConfirmBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(35, plateClassConfirm_);
            }
            if (!getPlateColorConfirmBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(36, plateColorConfirm_);
            }
            if (!getPlateNoConfirmBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(37, plateNoConfirm_);
            }
            if (illegalActConfirm_ != 0) {
                size += com.google.protobuf.CodedOutputStream.computeInt32Size(38, illegalActConfirm_);
            }
            if (!getErrcorInfoBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(39, errcorInfo_);
            }
            if (!getStdIllegalActBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(40, stdIllegalAct_);
            }
            if (!getConfirmPersonBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(41, confirmPerson_);
            }
            if (!getConfirmUnitBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(42, confirmUnit_);
            }
            if (!getConfirmCommentBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(43, confirmComment_);
            }
            if (confirmTime_ != 0L) {
                size += com.google.protobuf.CodedOutputStream.computeUInt64Size(44, confirmTime_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof IllegalRecord_Proto)) {
                return super.equals(obj);
            }
            IllegalRecord_Proto other = (IllegalRecord_Proto)obj;

            boolean result = true;
            result = result && getIllegalRecordID().equals(other.getIllegalRecordID());
            result = result && getSourceID().equals(other.getSourceID());
            result = result && getTollgateID().equals(other.getTollgateID());
            result = result && (getShotTime() == other.getShotTime());
            result = result && getShotPlace().equals(other.getShotPlace());
            result = result && (getIllegalAct() == other.getIllegalAct());
            result = result && getShotPlaceCode().equals(other.getShotPlaceCode());
            result = result && (getLaneNo() == other.getLaneNo());
            result = result && (getHasPlate() == other.getHasPlate());
            result = result && getPlateClass().equals(other.getPlateClass());
            result = result && getPlateColor().equals(other.getPlateColor());
            result = result && getPlateNo().equals(other.getPlateNo());
            result = result && (getLeftTopX() == other.getLeftTopX());
            result = result && (getLeftTopY() == other.getLeftTopY());
            result = result && (getRightBtmX() == other.getRightBtmX());
            result = result && (getRightBtmY() == other.getRightBtmY());
            result = result && (Double.doubleToLongBits(getSpeed()) == Double.doubleToLongBits(other.getSpeed()));
            result = result && getDirection().equals(other.getDirection());
            result = result && getDrivingStatusCode().equals(other.getDrivingStatusCode());
            result = result && getVehicleClass().equals(other.getVehicleClass());
            result = result && getImagePath().equals(other.getImagePath());
            result = result && getImagePath2().equals(other.getImagePath2());
            result = result && getImagePath3().equals(other.getImagePath3());
            result = result && getImagePath4().equals(other.getImagePath4());
            result = result && getCompImagePath().equals(other.getCompImagePath());
            result = result && (getIllegalStatus() == other.getIllegalStatus());
            result = result && (getEntryTime() == other.getEntryTime());
            result = result && (getUpdateTime() == other.getUpdateTime());
            result = result && getSpeedItvllNo().equals(other.getSpeedItvllNo());
            result = result && (getVideoStatus() == other.getVideoStatus());
            result = result && (getCompImageStatus() == other.getCompImageStatus());
            result = result && (Double.doubleToLongBits(getMaxSpeed()) == Double.doubleToLongBits(other.getMaxSpeed()));
            result = result && getPassTimes().equals(other.getPassTimes());
            result = result && (getBackupMark() == other.getBackupMark());
            result = result && getPlateClassConfirm().equals(other.getPlateClassConfirm());
            result = result && getPlateColorConfirm().equals(other.getPlateColorConfirm());
            result = result && getPlateNoConfirm().equals(other.getPlateNoConfirm());
            result = result && (getIllegalActConfirm() == other.getIllegalActConfirm());
            result = result && getErrcorInfo().equals(other.getErrcorInfo());
            result = result && getStdIllegalAct().equals(other.getStdIllegalAct());
            result = result && getConfirmPerson().equals(other.getConfirmPerson());
            result = result && getConfirmUnit().equals(other.getConfirmUnit());
            result = result && getConfirmComment().equals(other.getConfirmComment());
            result = result && (getConfirmTime() == other.getConfirmTime());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + ILLEGALRECORDID_FIELD_NUMBER;
            hash = (53 * hash) + getIllegalRecordID().hashCode();
            hash = (37 * hash) + SOURCEID_FIELD_NUMBER;
            hash = (53 * hash) + getSourceID().hashCode();
            hash = (37 * hash) + TOLLGATEID_FIELD_NUMBER;
            hash = (53 * hash) + getTollgateID().hashCode();
            hash = (37 * hash) + SHOTTIME_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getShotTime());
            hash = (37 * hash) + SHOTPLACE_FIELD_NUMBER;
            hash = (53 * hash) + getShotPlace().hashCode();
            hash = (37 * hash) + ILLEGALACT_FIELD_NUMBER;
            hash = (53 * hash) + getIllegalAct();
            hash = (37 * hash) + SHOTPLACECODE_FIELD_NUMBER;
            hash = (53 * hash) + getShotPlaceCode().hashCode();
            hash = (37 * hash) + LANENO_FIELD_NUMBER;
            hash = (53 * hash) + getLaneNo();
            hash = (37 * hash) + HASPLATE_FIELD_NUMBER;
            hash = (53 * hash) + getHasPlate();
            hash = (37 * hash) + PLATECLASS_FIELD_NUMBER;
            hash = (53 * hash) + getPlateClass().hashCode();
            hash = (37 * hash) + PLATECOLOR_FIELD_NUMBER;
            hash = (53 * hash) + getPlateColor().hashCode();
            hash = (37 * hash) + PLATENO_FIELD_NUMBER;
            hash = (53 * hash) + getPlateNo().hashCode();
            hash = (37 * hash) + LEFTTOPX_FIELD_NUMBER;
            hash = (53 * hash) + getLeftTopX();
            hash = (37 * hash) + LEFTTOPY_FIELD_NUMBER;
            hash = (53 * hash) + getLeftTopY();
            hash = (37 * hash) + RIGHTBTMX_FIELD_NUMBER;
            hash = (53 * hash) + getRightBtmX();
            hash = (37 * hash) + RIGHTBTMY_FIELD_NUMBER;
            hash = (53 * hash) + getRightBtmY();
            hash = (37 * hash) + SPEED_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(Double.doubleToLongBits(getSpeed()));
            hash = (37 * hash) + DIRECTION_FIELD_NUMBER;
            hash = (53 * hash) + getDirection().hashCode();
            hash = (37 * hash) + DRIVINGSTATUSCODE_FIELD_NUMBER;
            hash = (53 * hash) + getDrivingStatusCode().hashCode();
            hash = (37 * hash) + VEHICLECLASS_FIELD_NUMBER;
            hash = (53 * hash) + getVehicleClass().hashCode();
            hash = (37 * hash) + IMAGEPATH_FIELD_NUMBER;
            hash = (53 * hash) + getImagePath().hashCode();
            hash = (37 * hash) + IMAGEPATH2_FIELD_NUMBER;
            hash = (53 * hash) + getImagePath2().hashCode();
            hash = (37 * hash) + IMAGEPATH3_FIELD_NUMBER;
            hash = (53 * hash) + getImagePath3().hashCode();
            hash = (37 * hash) + IMAGEPATH4_FIELD_NUMBER;
            hash = (53 * hash) + getImagePath4().hashCode();
            hash = (37 * hash) + COMPIMAGEPATH_FIELD_NUMBER;
            hash = (53 * hash) + getCompImagePath().hashCode();
            hash = (37 * hash) + ILLEGALSTATUS_FIELD_NUMBER;
            hash = (53 * hash) + getIllegalStatus();
            hash = (37 * hash) + ENTRYTIME_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getEntryTime());
            hash = (37 * hash) + UPDATETIME_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getUpdateTime());
            hash = (37 * hash) + SPEEDITVLLNO_FIELD_NUMBER;
            hash = (53 * hash) + getSpeedItvllNo().hashCode();
            hash = (37 * hash) + VIDEOSTATUS_FIELD_NUMBER;
            hash = (53 * hash) + getVideoStatus();
            hash = (37 * hash) + COMPIMAGESTATUS_FIELD_NUMBER;
            hash = (53 * hash) + getCompImageStatus();
            hash = (37 * hash) + MAXSPEED_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(Double.doubleToLongBits(getMaxSpeed()));
            hash = (37 * hash) + PASSTIMES_FIELD_NUMBER;
            hash = (53 * hash) + getPassTimes().hashCode();
            hash = (37 * hash) + BACKUPMARK_FIELD_NUMBER;
            hash = (53 * hash) + getBackupMark();
            hash = (37 * hash) + PLATECLASSCONFIRM_FIELD_NUMBER;
            hash = (53 * hash) + getPlateClassConfirm().hashCode();
            hash = (37 * hash) + PLATECOLORCONFIRM_FIELD_NUMBER;
            hash = (53 * hash) + getPlateColorConfirm().hashCode();
            hash = (37 * hash) + PLATENOCONFIRM_FIELD_NUMBER;
            hash = (53 * hash) + getPlateNoConfirm().hashCode();
            hash = (37 * hash) + ILLEGALACTCONFIRM_FIELD_NUMBER;
            hash = (53 * hash) + getIllegalActConfirm();
            hash = (37 * hash) + ERRCORINFO_FIELD_NUMBER;
            hash = (53 * hash) + getErrcorInfo().hashCode();
            hash = (37 * hash) + STDILLEGALACT_FIELD_NUMBER;
            hash = (53 * hash) + getStdIllegalAct().hashCode();
            hash = (37 * hash) + CONFIRMPERSON_FIELD_NUMBER;
            hash = (53 * hash) + getConfirmPerson().hashCode();
            hash = (37 * hash) + CONFIRMUNIT_FIELD_NUMBER;
            hash = (53 * hash) + getConfirmUnit().hashCode();
            hash = (37 * hash) + CONFIRMCOMMENT_FIELD_NUMBER;
            hash = (53 * hash) + getConfirmComment().hashCode();
            hash = (37 * hash) + CONFIRMTIME_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getConfirmTime());
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @Override
        public com.google.protobuf.Parser<IllegalRecord_Proto> getParserForType() {
            return PARSER;
        }

        public IllegalRecord_Proto getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * Protobuf type {@code IllegalRecord_Proto}
         */
        public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:IllegalRecord_Proto)
            IllegalRecord_ProtoOrBuilder {
            private Object illegalRecordID_ = "";
            private Object sourceID_ = "";
            private Object tollgateID_ = "";
            private long shotTime_;
            private Object shotPlace_ = "";
            private int illegalAct_;
            private Object shotPlaceCode_ = "";
            private int laneNo_;
            private int hasPlate_;
            private Object plateClass_ = "";
            private Object plateColor_ = "";
            private Object plateNo_ = "";
            private int leftTopX_;
            private int leftTopY_;
            private int rightBtmX_;
            private int rightBtmY_;
            private double speed_;
            private Object direction_ = "";
            private Object drivingStatusCode_ = "";
            private Object vehicleClass_ = "";
            private Object imagePath_ = "";
            private Object imagePath2_ = "";
            private Object imagePath3_ = "";
            private Object imagePath4_ = "";
            private Object compImagePath_ = "";
            private int illegalStatus_;
            private long entryTime_;
            private long updateTime_;
            private Object speedItvllNo_ = "";
            private int videoStatus_;
            private int compImageStatus_;
            private double maxSpeed_;
            private Object passTimes_ = "";
            private int backupMark_;
            private Object plateClassConfirm_ = "";
            private Object plateColorConfirm_ = "";
            private Object plateNoConfirm_ = "";
            private int illegalActConfirm_;
            private Object errcorInfo_ = "";
            private Object stdIllegalAct_ = "";
            private Object confirmPerson_ = "";
            private Object confirmUnit_ = "";
            private Object confirmComment_ = "";
            private long confirmTime_;

            // Construct using
            // com.kedacom.ctsp.cvf.viid.common.protobuf.IllegalRecordProtobuf.IllegalRecord_Proto.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
                return IllegalRecordProtobuf.internal_static_IllegalRecord_Proto_descriptor;
            }

            protected FieldAccessorTable internalGetFieldAccessorTable() {
                return IllegalRecordProtobuf.internal_static_IllegalRecord_Proto_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(IllegalRecord_Proto.class, Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                illegalRecordID_ = "";

                sourceID_ = "";

                tollgateID_ = "";

                shotTime_ = 0L;

                shotPlace_ = "";

                illegalAct_ = 0;

                shotPlaceCode_ = "";

                laneNo_ = 0;

                hasPlate_ = 0;

                plateClass_ = "";

                plateColor_ = "";

                plateNo_ = "";

                leftTopX_ = 0;

                leftTopY_ = 0;

                rightBtmX_ = 0;

                rightBtmY_ = 0;

                speed_ = 0D;

                direction_ = "";

                drivingStatusCode_ = "";

                vehicleClass_ = "";

                imagePath_ = "";

                imagePath2_ = "";

                imagePath3_ = "";

                imagePath4_ = "";

                compImagePath_ = "";

                illegalStatus_ = 0;

                entryTime_ = 0L;

                updateTime_ = 0L;

                speedItvllNo_ = "";

                videoStatus_ = 0;

                compImageStatus_ = 0;

                maxSpeed_ = 0D;

                passTimes_ = "";

                backupMark_ = 0;

                plateClassConfirm_ = "";

                plateColorConfirm_ = "";

                plateNoConfirm_ = "";

                illegalActConfirm_ = 0;

                errcorInfo_ = "";

                stdIllegalAct_ = "";

                confirmPerson_ = "";

                confirmUnit_ = "";

                confirmComment_ = "";

                confirmTime_ = 0L;

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
                return IllegalRecordProtobuf.internal_static_IllegalRecord_Proto_descriptor;
            }

            public IllegalRecord_Proto getDefaultInstanceForType() {
                return IllegalRecord_Proto.getDefaultInstance();
            }

            public IllegalRecord_Proto build() {
                IllegalRecord_Proto result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public IllegalRecord_Proto buildPartial() {
                IllegalRecord_Proto result = new IllegalRecord_Proto(this);
                result.illegalRecordID_ = illegalRecordID_;
                result.sourceID_ = sourceID_;
                result.tollgateID_ = tollgateID_;
                result.shotTime_ = shotTime_;
                result.shotPlace_ = shotPlace_;
                result.illegalAct_ = illegalAct_;
                result.shotPlaceCode_ = shotPlaceCode_;
                result.laneNo_ = laneNo_;
                result.hasPlate_ = hasPlate_;
                result.plateClass_ = plateClass_;
                result.plateColor_ = plateColor_;
                result.plateNo_ = plateNo_;
                result.leftTopX_ = leftTopX_;
                result.leftTopY_ = leftTopY_;
                result.rightBtmX_ = rightBtmX_;
                result.rightBtmY_ = rightBtmY_;
                result.speed_ = speed_;
                result.direction_ = direction_;
                result.drivingStatusCode_ = drivingStatusCode_;
                result.vehicleClass_ = vehicleClass_;
                result.imagePath_ = imagePath_;
                result.imagePath2_ = imagePath2_;
                result.imagePath3_ = imagePath3_;
                result.imagePath4_ = imagePath4_;
                result.compImagePath_ = compImagePath_;
                result.illegalStatus_ = illegalStatus_;
                result.entryTime_ = entryTime_;
                result.updateTime_ = updateTime_;
                result.speedItvllNo_ = speedItvllNo_;
                result.videoStatus_ = videoStatus_;
                result.compImageStatus_ = compImageStatus_;
                result.maxSpeed_ = maxSpeed_;
                result.passTimes_ = passTimes_;
                result.backupMark_ = backupMark_;
                result.plateClassConfirm_ = plateClassConfirm_;
                result.plateColorConfirm_ = plateColorConfirm_;
                result.plateNoConfirm_ = plateNoConfirm_;
                result.illegalActConfirm_ = illegalActConfirm_;
                result.errcorInfo_ = errcorInfo_;
                result.stdIllegalAct_ = stdIllegalAct_;
                result.confirmPerson_ = confirmPerson_;
                result.confirmUnit_ = confirmUnit_;
                result.confirmComment_ = confirmComment_;
                result.confirmTime_ = confirmTime_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder)super.clone();
            }

            public Builder setField(com.google.protobuf.Descriptors.FieldDescriptor field, Object value) {
                return (Builder)super.setField(field, value);
            }

            public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder)super.clearField(field);
            }

            public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder)super.clearOneof(oneof);
            }

            public Builder setRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field, int index,
                Object value) {
                return (Builder)super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field, Object value) {
                return (Builder)super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof IllegalRecord_Proto) {
                    return mergeFrom((IllegalRecord_Proto)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(IllegalRecord_Proto other) {
                if (other == IllegalRecord_Proto.getDefaultInstance())
                    return this;
                if (!other.getIllegalRecordID().isEmpty()) {
                    illegalRecordID_ = other.illegalRecordID_;
                    onChanged();
                }
                if (!other.getSourceID().isEmpty()) {
                    sourceID_ = other.sourceID_;
                    onChanged();
                }
                if (!other.getTollgateID().isEmpty()) {
                    tollgateID_ = other.tollgateID_;
                    onChanged();
                }
                if (other.getShotTime() != 0L) {
                    setShotTime(other.getShotTime());
                }
                if (!other.getShotPlace().isEmpty()) {
                    shotPlace_ = other.shotPlace_;
                    onChanged();
                }
                if (other.getIllegalAct() != 0) {
                    setIllegalAct(other.getIllegalAct());
                }
                if (!other.getShotPlaceCode().isEmpty()) {
                    shotPlaceCode_ = other.shotPlaceCode_;
                    onChanged();
                }
                if (other.getLaneNo() != 0) {
                    setLaneNo(other.getLaneNo());
                }
                if (other.getHasPlate() != 0) {
                    setHasPlate(other.getHasPlate());
                }
                if (!other.getPlateClass().isEmpty()) {
                    plateClass_ = other.plateClass_;
                    onChanged();
                }
                if (!other.getPlateColor().isEmpty()) {
                    plateColor_ = other.plateColor_;
                    onChanged();
                }
                if (!other.getPlateNo().isEmpty()) {
                    plateNo_ = other.plateNo_;
                    onChanged();
                }
                if (other.getLeftTopX() != 0) {
                    setLeftTopX(other.getLeftTopX());
                }
                if (other.getLeftTopY() != 0) {
                    setLeftTopY(other.getLeftTopY());
                }
                if (other.getRightBtmX() != 0) {
                    setRightBtmX(other.getRightBtmX());
                }
                if (other.getRightBtmY() != 0) {
                    setRightBtmY(other.getRightBtmY());
                }
                if (other.getSpeed() != 0D) {
                    setSpeed(other.getSpeed());
                }
                if (!other.getDirection().isEmpty()) {
                    direction_ = other.direction_;
                    onChanged();
                }
                if (!other.getDrivingStatusCode().isEmpty()) {
                    drivingStatusCode_ = other.drivingStatusCode_;
                    onChanged();
                }
                if (!other.getVehicleClass().isEmpty()) {
                    vehicleClass_ = other.vehicleClass_;
                    onChanged();
                }
                if (!other.getImagePath().isEmpty()) {
                    imagePath_ = other.imagePath_;
                    onChanged();
                }
                if (!other.getImagePath2().isEmpty()) {
                    imagePath2_ = other.imagePath2_;
                    onChanged();
                }
                if (!other.getImagePath3().isEmpty()) {
                    imagePath3_ = other.imagePath3_;
                    onChanged();
                }
                if (!other.getImagePath4().isEmpty()) {
                    imagePath4_ = other.imagePath4_;
                    onChanged();
                }
                if (!other.getCompImagePath().isEmpty()) {
                    compImagePath_ = other.compImagePath_;
                    onChanged();
                }
                if (other.getIllegalStatus() != 0) {
                    setIllegalStatus(other.getIllegalStatus());
                }
                if (other.getEntryTime() != 0L) {
                    setEntryTime(other.getEntryTime());
                }
                if (other.getUpdateTime() != 0L) {
                    setUpdateTime(other.getUpdateTime());
                }
                if (!other.getSpeedItvllNo().isEmpty()) {
                    speedItvllNo_ = other.speedItvllNo_;
                    onChanged();
                }
                if (other.getVideoStatus() != 0) {
                    setVideoStatus(other.getVideoStatus());
                }
                if (other.getCompImageStatus() != 0) {
                    setCompImageStatus(other.getCompImageStatus());
                }
                if (other.getMaxSpeed() != 0D) {
                    setMaxSpeed(other.getMaxSpeed());
                }
                if (!other.getPassTimes().isEmpty()) {
                    passTimes_ = other.passTimes_;
                    onChanged();
                }
                if (other.getBackupMark() != 0) {
                    setBackupMark(other.getBackupMark());
                }
                if (!other.getPlateClassConfirm().isEmpty()) {
                    plateClassConfirm_ = other.plateClassConfirm_;
                    onChanged();
                }
                if (!other.getPlateColorConfirm().isEmpty()) {
                    plateColorConfirm_ = other.plateColorConfirm_;
                    onChanged();
                }
                if (!other.getPlateNoConfirm().isEmpty()) {
                    plateNoConfirm_ = other.plateNoConfirm_;
                    onChanged();
                }
                if (other.getIllegalActConfirm() != 0) {
                    setIllegalActConfirm(other.getIllegalActConfirm());
                }
                if (!other.getErrcorInfo().isEmpty()) {
                    errcorInfo_ = other.errcorInfo_;
                    onChanged();
                }
                if (!other.getStdIllegalAct().isEmpty()) {
                    stdIllegalAct_ = other.stdIllegalAct_;
                    onChanged();
                }
                if (!other.getConfirmPerson().isEmpty()) {
                    confirmPerson_ = other.confirmPerson_;
                    onChanged();
                }
                if (!other.getConfirmUnit().isEmpty()) {
                    confirmUnit_ = other.confirmUnit_;
                    onChanged();
                }
                if (!other.getConfirmComment().isEmpty()) {
                    confirmComment_ = other.confirmComment_;
                    onChanged();
                }
                if (other.getConfirmTime() != 0L) {
                    setConfirmTime(other.getConfirmTime());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                IllegalRecord_Proto parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (IllegalRecord_Proto)e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <code>string IllegalRecordID = 1;</code>
             */
            public String getIllegalRecordID() {
                Object ref = illegalRecordID_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                    String s = bs.toStringUtf8();
                    illegalRecordID_ = s;
                    return s;
                } else {
                    return (String)ref;
                }
            }

            /**
             * <code>string IllegalRecordID = 1;</code>
             */
            public Builder setIllegalRecordID(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                illegalRecordID_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string IllegalRecordID = 1;</code>
             */
            public com.google.protobuf.ByteString getIllegalRecordIDBytes() {
                Object ref = illegalRecordID_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                    illegalRecordID_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString)ref;
                }
            }

            /**
             * <code>string IllegalRecordID = 1;</code>
             */
            public Builder setIllegalRecordIDBytes(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                illegalRecordID_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string IllegalRecordID = 1;</code>
             */
            public Builder clearIllegalRecordID() {

                illegalRecordID_ = getDefaultInstance().getIllegalRecordID();
                onChanged();
                return this;
            }

            /**
             * <code>string SourceID = 2;</code>
             */
            public String getSourceID() {
                Object ref = sourceID_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                    String s = bs.toStringUtf8();
                    sourceID_ = s;
                    return s;
                } else {
                    return (String)ref;
                }
            }

            /**
             * <code>string SourceID = 2;</code>
             */
            public Builder setSourceID(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                sourceID_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string SourceID = 2;</code>
             */
            public com.google.protobuf.ByteString getSourceIDBytes() {
                Object ref = sourceID_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                    sourceID_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString)ref;
                }
            }

            /**
             * <code>string SourceID = 2;</code>
             */
            public Builder setSourceIDBytes(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                sourceID_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string SourceID = 2;</code>
             */
            public Builder clearSourceID() {

                sourceID_ = getDefaultInstance().getSourceID();
                onChanged();
                return this;
            }

            /**
             * <code>string TollgateID = 3;</code>
             */
            public String getTollgateID() {
                Object ref = tollgateID_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                    String s = bs.toStringUtf8();
                    tollgateID_ = s;
                    return s;
                } else {
                    return (String)ref;
                }
            }

            /**
             * <code>string TollgateID = 3;</code>
             */
            public Builder setTollgateID(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                tollgateID_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string TollgateID = 3;</code>
             */
            public com.google.protobuf.ByteString getTollgateIDBytes() {
                Object ref = tollgateID_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                    tollgateID_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString)ref;
                }
            }

            /**
             * <code>string TollgateID = 3;</code>
             */
            public Builder setTollgateIDBytes(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                tollgateID_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string TollgateID = 3;</code>
             */
            public Builder clearTollgateID() {

                tollgateID_ = getDefaultInstance().getTollgateID();
                onChanged();
                return this;
            }

            /**
             * <code>uint64 ShotTime = 4;</code>
             */
            public long getShotTime() {
                return shotTime_;
            }

            /**
             * <code>uint64 ShotTime = 4;</code>
             */
            public Builder setShotTime(long value) {

                shotTime_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>uint64 ShotTime = 4;</code>
             */
            public Builder clearShotTime() {

                shotTime_ = 0L;
                onChanged();
                return this;
            }

            /**
             * <code>string ShotPlace = 5;</code>
             */
            public String getShotPlace() {
                Object ref = shotPlace_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                    String s = bs.toStringUtf8();
                    shotPlace_ = s;
                    return s;
                } else {
                    return (String)ref;
                }
            }

            /**
             * <code>string ShotPlace = 5;</code>
             */
            public Builder setShotPlace(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                shotPlace_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string ShotPlace = 5;</code>
             */
            public com.google.protobuf.ByteString getShotPlaceBytes() {
                Object ref = shotPlace_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                    shotPlace_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString)ref;
                }
            }

            /**
             * <code>string ShotPlace = 5;</code>
             */
            public Builder setShotPlaceBytes(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                shotPlace_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string ShotPlace = 5;</code>
             */
            public Builder clearShotPlace() {

                shotPlace_ = getDefaultInstance().getShotPlace();
                onChanged();
                return this;
            }

            /**
             * <code>int32 IllegalAct = 6;</code>
             */
            public int getIllegalAct() {
                return illegalAct_;
            }

            /**
             * <code>int32 IllegalAct = 6;</code>
             */
            public Builder setIllegalAct(int value) {

                illegalAct_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>int32 IllegalAct = 6;</code>
             */
            public Builder clearIllegalAct() {

                illegalAct_ = 0;
                onChanged();
                return this;
            }

            /**
             * <code>string ShotPlaceCode = 7;</code>
             */
            public String getShotPlaceCode() {
                Object ref = shotPlaceCode_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                    String s = bs.toStringUtf8();
                    shotPlaceCode_ = s;
                    return s;
                } else {
                    return (String)ref;
                }
            }

            /**
             * <code>string ShotPlaceCode = 7;</code>
             */
            public Builder setShotPlaceCode(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                shotPlaceCode_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string ShotPlaceCode = 7;</code>
             */
            public com.google.protobuf.ByteString getShotPlaceCodeBytes() {
                Object ref = shotPlaceCode_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                    shotPlaceCode_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString)ref;
                }
            }

            /**
             * <code>string ShotPlaceCode = 7;</code>
             */
            public Builder setShotPlaceCodeBytes(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                shotPlaceCode_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string ShotPlaceCode = 7;</code>
             */
            public Builder clearShotPlaceCode() {

                shotPlaceCode_ = getDefaultInstance().getShotPlaceCode();
                onChanged();
                return this;
            }

            /**
             * <code>int32 LaneNo = 8;</code>
             */
            public int getLaneNo() {
                return laneNo_;
            }

            /**
             * <code>int32 LaneNo = 8;</code>
             */
            public Builder setLaneNo(int value) {

                laneNo_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>int32 LaneNo = 8;</code>
             */
            public Builder clearLaneNo() {

                laneNo_ = 0;
                onChanged();
                return this;
            }

            /**
             * <code>int32 HasPlate = 9;</code>
             */
            public int getHasPlate() {
                return hasPlate_;
            }

            /**
             * <code>int32 HasPlate = 9;</code>
             */
            public Builder setHasPlate(int value) {

                hasPlate_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>int32 HasPlate = 9;</code>
             */
            public Builder clearHasPlate() {

                hasPlate_ = 0;
                onChanged();
                return this;
            }

            /**
             * <code>string PlateClass = 10;</code>
             */
            public String getPlateClass() {
                Object ref = plateClass_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                    String s = bs.toStringUtf8();
                    plateClass_ = s;
                    return s;
                } else {
                    return (String)ref;
                }
            }

            /**
             * <code>string PlateClass = 10;</code>
             */
            public Builder setPlateClass(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                plateClass_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string PlateClass = 10;</code>
             */
            public com.google.protobuf.ByteString getPlateClassBytes() {
                Object ref = plateClass_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                    plateClass_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString)ref;
                }
            }

            /**
             * <code>string PlateClass = 10;</code>
             */
            public Builder setPlateClassBytes(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                plateClass_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string PlateClass = 10;</code>
             */
            public Builder clearPlateClass() {

                plateClass_ = getDefaultInstance().getPlateClass();
                onChanged();
                return this;
            }

            /**
             * <code>string PlateColor = 11;</code>
             */
            public String getPlateColor() {
                Object ref = plateColor_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                    String s = bs.toStringUtf8();
                    plateColor_ = s;
                    return s;
                } else {
                    return (String)ref;
                }
            }

            /**
             * <code>string PlateColor = 11;</code>
             */
            public Builder setPlateColor(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                plateColor_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string PlateColor = 11;</code>
             */
            public com.google.protobuf.ByteString getPlateColorBytes() {
                Object ref = plateColor_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                    plateColor_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString)ref;
                }
            }

            /**
             * <code>string PlateColor = 11;</code>
             */
            public Builder setPlateColorBytes(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                plateColor_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string PlateColor = 11;</code>
             */
            public Builder clearPlateColor() {

                plateColor_ = getDefaultInstance().getPlateColor();
                onChanged();
                return this;
            }

            /**
             * <code>string PlateNo = 12;</code>
             */
            public String getPlateNo() {
                Object ref = plateNo_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                    String s = bs.toStringUtf8();
                    plateNo_ = s;
                    return s;
                } else {
                    return (String)ref;
                }
            }

            /**
             * <code>string PlateNo = 12;</code>
             */
            public Builder setPlateNo(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                plateNo_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string PlateNo = 12;</code>
             */
            public com.google.protobuf.ByteString getPlateNoBytes() {
                Object ref = plateNo_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                    plateNo_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString)ref;
                }
            }

            /**
             * <code>string PlateNo = 12;</code>
             */
            public Builder setPlateNoBytes(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                plateNo_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string PlateNo = 12;</code>
             */
            public Builder clearPlateNo() {

                plateNo_ = getDefaultInstance().getPlateNo();
                onChanged();
                return this;
            }

            /**
             * <code>int32 LeftTopX = 13;</code>
             */
            public int getLeftTopX() {
                return leftTopX_;
            }

            /**
             * <code>int32 LeftTopX = 13;</code>
             */
            public Builder setLeftTopX(int value) {

                leftTopX_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>int32 LeftTopX = 13;</code>
             */
            public Builder clearLeftTopX() {

                leftTopX_ = 0;
                onChanged();
                return this;
            }

            /**
             * <code>int32 LeftTopY = 14;</code>
             */
            public int getLeftTopY() {
                return leftTopY_;
            }

            /**
             * <code>int32 LeftTopY = 14;</code>
             */
            public Builder setLeftTopY(int value) {

                leftTopY_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>int32 LeftTopY = 14;</code>
             */
            public Builder clearLeftTopY() {

                leftTopY_ = 0;
                onChanged();
                return this;
            }

            /**
             * <code>int32 RightBtmX = 15;</code>
             */
            public int getRightBtmX() {
                return rightBtmX_;
            }

            /**
             * <code>int32 RightBtmX = 15;</code>
             */
            public Builder setRightBtmX(int value) {

                rightBtmX_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>int32 RightBtmX = 15;</code>
             */
            public Builder clearRightBtmX() {

                rightBtmX_ = 0;
                onChanged();
                return this;
            }

            /**
             * <code>int32 RightBtmY = 16;</code>
             */
            public int getRightBtmY() {
                return rightBtmY_;
            }

            /**
             * <code>int32 RightBtmY = 16;</code>
             */
            public Builder setRightBtmY(int value) {

                rightBtmY_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>int32 RightBtmY = 16;</code>
             */
            public Builder clearRightBtmY() {

                rightBtmY_ = 0;
                onChanged();
                return this;
            }

            /**
             * <code>double Speed = 17;</code>
             */
            public double getSpeed() {
                return speed_;
            }

            /**
             * <code>double Speed = 17;</code>
             */
            public Builder setSpeed(double value) {

                speed_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>double Speed = 17;</code>
             */
            public Builder clearSpeed() {

                speed_ = 0D;
                onChanged();
                return this;
            }

            /**
             * <code>string Direction = 18;</code>
             */
            public String getDirection() {
                Object ref = direction_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                    String s = bs.toStringUtf8();
                    direction_ = s;
                    return s;
                } else {
                    return (String)ref;
                }
            }

            /**
             * <code>string Direction = 18;</code>
             */
            public Builder setDirection(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                direction_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string Direction = 18;</code>
             */
            public com.google.protobuf.ByteString getDirectionBytes() {
                Object ref = direction_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                    direction_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString)ref;
                }
            }

            /**
             * <code>string Direction = 18;</code>
             */
            public Builder setDirectionBytes(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                direction_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string Direction = 18;</code>
             */
            public Builder clearDirection() {

                direction_ = getDefaultInstance().getDirection();
                onChanged();
                return this;
            }

            /**
             * <code>string DrivingStatusCode = 19;</code>
             */
            public String getDrivingStatusCode() {
                Object ref = drivingStatusCode_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                    String s = bs.toStringUtf8();
                    drivingStatusCode_ = s;
                    return s;
                } else {
                    return (String)ref;
                }
            }

            /**
             * <code>string DrivingStatusCode = 19;</code>
             */
            public Builder setDrivingStatusCode(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                drivingStatusCode_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string DrivingStatusCode = 19;</code>
             */
            public com.google.protobuf.ByteString getDrivingStatusCodeBytes() {
                Object ref = drivingStatusCode_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                    drivingStatusCode_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString)ref;
                }
            }

            /**
             * <code>string DrivingStatusCode = 19;</code>
             */
            public Builder setDrivingStatusCodeBytes(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                drivingStatusCode_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string DrivingStatusCode = 19;</code>
             */
            public Builder clearDrivingStatusCode() {

                drivingStatusCode_ = getDefaultInstance().getDrivingStatusCode();
                onChanged();
                return this;
            }

            /**
             * <code>string VehicleClass = 20;</code>
             */
            public String getVehicleClass() {
                Object ref = vehicleClass_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                    String s = bs.toStringUtf8();
                    vehicleClass_ = s;
                    return s;
                } else {
                    return (String)ref;
                }
            }

            /**
             * <code>string VehicleClass = 20;</code>
             */
            public Builder setVehicleClass(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                vehicleClass_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string VehicleClass = 20;</code>
             */
            public com.google.protobuf.ByteString getVehicleClassBytes() {
                Object ref = vehicleClass_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                    vehicleClass_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString)ref;
                }
            }

            /**
             * <code>string VehicleClass = 20;</code>
             */
            public Builder setVehicleClassBytes(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                vehicleClass_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string VehicleClass = 20;</code>
             */
            public Builder clearVehicleClass() {

                vehicleClass_ = getDefaultInstance().getVehicleClass();
                onChanged();
                return this;
            }

            /**
             * <code>string ImagePath = 21;</code>
             */
            public String getImagePath() {
                Object ref = imagePath_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                    String s = bs.toStringUtf8();
                    imagePath_ = s;
                    return s;
                } else {
                    return (String)ref;
                }
            }

            /**
             * <code>string ImagePath = 21;</code>
             */
            public Builder setImagePath(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                imagePath_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string ImagePath = 21;</code>
             */
            public com.google.protobuf.ByteString getImagePathBytes() {
                Object ref = imagePath_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                    imagePath_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString)ref;
                }
            }

            /**
             * <code>string ImagePath = 21;</code>
             */
            public Builder setImagePathBytes(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                imagePath_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string ImagePath = 21;</code>
             */
            public Builder clearImagePath() {

                imagePath_ = getDefaultInstance().getImagePath();
                onChanged();
                return this;
            }

            /**
             * <code>string ImagePath2 = 22;</code>
             */
            public String getImagePath2() {
                Object ref = imagePath2_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                    String s = bs.toStringUtf8();
                    imagePath2_ = s;
                    return s;
                } else {
                    return (String)ref;
                }
            }

            /**
             * <code>string ImagePath2 = 22;</code>
             */
            public Builder setImagePath2(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                imagePath2_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string ImagePath2 = 22;</code>
             */
            public com.google.protobuf.ByteString getImagePath2Bytes() {
                Object ref = imagePath2_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                    imagePath2_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString)ref;
                }
            }

            /**
             * <code>string ImagePath2 = 22;</code>
             */
            public Builder setImagePath2Bytes(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                imagePath2_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string ImagePath2 = 22;</code>
             */
            public Builder clearImagePath2() {

                imagePath2_ = getDefaultInstance().getImagePath2();
                onChanged();
                return this;
            }

            /**
             * <code>string ImagePath3 = 23;</code>
             */
            public String getImagePath3() {
                Object ref = imagePath3_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                    String s = bs.toStringUtf8();
                    imagePath3_ = s;
                    return s;
                } else {
                    return (String)ref;
                }
            }

            /**
             * <code>string ImagePath3 = 23;</code>
             */
            public Builder setImagePath3(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                imagePath3_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string ImagePath3 = 23;</code>
             */
            public com.google.protobuf.ByteString getImagePath3Bytes() {
                Object ref = imagePath3_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                    imagePath3_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString)ref;
                }
            }

            /**
             * <code>string ImagePath3 = 23;</code>
             */
            public Builder setImagePath3Bytes(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                imagePath3_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string ImagePath3 = 23;</code>
             */
            public Builder clearImagePath3() {

                imagePath3_ = getDefaultInstance().getImagePath3();
                onChanged();
                return this;
            }

            /**
             * <code>string ImagePath4 = 24;</code>
             */
            public String getImagePath4() {
                Object ref = imagePath4_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                    String s = bs.toStringUtf8();
                    imagePath4_ = s;
                    return s;
                } else {
                    return (String)ref;
                }
            }

            /**
             * <code>string ImagePath4 = 24;</code>
             */
            public Builder setImagePath4(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                imagePath4_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string ImagePath4 = 24;</code>
             */
            public com.google.protobuf.ByteString getImagePath4Bytes() {
                Object ref = imagePath4_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                    imagePath4_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString)ref;
                }
            }

            /**
             * <code>string ImagePath4 = 24;</code>
             */
            public Builder setImagePath4Bytes(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                imagePath4_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string ImagePath4 = 24;</code>
             */
            public Builder clearImagePath4() {

                imagePath4_ = getDefaultInstance().getImagePath4();
                onChanged();
                return this;
            }

            /**
             * <code>string CompImagePath = 25;</code>
             */
            public String getCompImagePath() {
                Object ref = compImagePath_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                    String s = bs.toStringUtf8();
                    compImagePath_ = s;
                    return s;
                } else {
                    return (String)ref;
                }
            }

            /**
             * <code>string CompImagePath = 25;</code>
             */
            public Builder setCompImagePath(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                compImagePath_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string CompImagePath = 25;</code>
             */
            public com.google.protobuf.ByteString getCompImagePathBytes() {
                Object ref = compImagePath_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                    compImagePath_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString)ref;
                }
            }

            /**
             * <code>string CompImagePath = 25;</code>
             */
            public Builder setCompImagePathBytes(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                compImagePath_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string CompImagePath = 25;</code>
             */
            public Builder clearCompImagePath() {

                compImagePath_ = getDefaultInstance().getCompImagePath();
                onChanged();
                return this;
            }

            /**
             * <code>int32 IllegalStatus = 26;</code>
             */
            public int getIllegalStatus() {
                return illegalStatus_;
            }

            /**
             * <code>int32 IllegalStatus = 26;</code>
             */
            public Builder setIllegalStatus(int value) {

                illegalStatus_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>int32 IllegalStatus = 26;</code>
             */
            public Builder clearIllegalStatus() {

                illegalStatus_ = 0;
                onChanged();
                return this;
            }

            /**
             * <code>uint64 EntryTime = 27;</code>
             */
            public long getEntryTime() {
                return entryTime_;
            }

            /**
             * <code>uint64 EntryTime = 27;</code>
             */
            public Builder setEntryTime(long value) {

                entryTime_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>uint64 EntryTime = 27;</code>
             */
            public Builder clearEntryTime() {

                entryTime_ = 0L;
                onChanged();
                return this;
            }

            /**
             * <code>uint64 UpdateTime = 28;</code>
             */
            public long getUpdateTime() {
                return updateTime_;
            }

            /**
             * <code>uint64 UpdateTime = 28;</code>
             */
            public Builder setUpdateTime(long value) {

                updateTime_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>uint64 UpdateTime = 28;</code>
             */
            public Builder clearUpdateTime() {

                updateTime_ = 0L;
                onChanged();
                return this;
            }

            /**
             * <code>string SpeedItvllNo = 29;</code>
             */
            public String getSpeedItvllNo() {
                Object ref = speedItvllNo_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                    String s = bs.toStringUtf8();
                    speedItvllNo_ = s;
                    return s;
                } else {
                    return (String)ref;
                }
            }

            /**
             * <code>string SpeedItvllNo = 29;</code>
             */
            public Builder setSpeedItvllNo(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                speedItvllNo_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string SpeedItvllNo = 29;</code>
             */
            public com.google.protobuf.ByteString getSpeedItvllNoBytes() {
                Object ref = speedItvllNo_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                    speedItvllNo_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString)ref;
                }
            }

            /**
             * <code>string SpeedItvllNo = 29;</code>
             */
            public Builder setSpeedItvllNoBytes(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                speedItvllNo_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string SpeedItvllNo = 29;</code>
             */
            public Builder clearSpeedItvllNo() {

                speedItvllNo_ = getDefaultInstance().getSpeedItvllNo();
                onChanged();
                return this;
            }

            /**
             * <code>int32 VideoStatus = 30;</code>
             */
            public int getVideoStatus() {
                return videoStatus_;
            }

            /**
             * <code>int32 VideoStatus = 30;</code>
             */
            public Builder setVideoStatus(int value) {

                videoStatus_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>int32 VideoStatus = 30;</code>
             */
            public Builder clearVideoStatus() {

                videoStatus_ = 0;
                onChanged();
                return this;
            }

            /**
             * <code>int32 CompImageStatus = 31;</code>
             */
            public int getCompImageStatus() {
                return compImageStatus_;
            }

            /**
             * <code>int32 CompImageStatus = 31;</code>
             */
            public Builder setCompImageStatus(int value) {

                compImageStatus_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>int32 CompImageStatus = 31;</code>
             */
            public Builder clearCompImageStatus() {

                compImageStatus_ = 0;
                onChanged();
                return this;
            }

            /**
             * <code>double MaxSpeed = 32;</code>
             */
            public double getMaxSpeed() {
                return maxSpeed_;
            }

            /**
             * <code>double MaxSpeed = 32;</code>
             */
            public Builder setMaxSpeed(double value) {

                maxSpeed_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>double MaxSpeed = 32;</code>
             */
            public Builder clearMaxSpeed() {

                maxSpeed_ = 0D;
                onChanged();
                return this;
            }

            /**
             * <code>string PassTimes = 33;</code>
             */
            public String getPassTimes() {
                Object ref = passTimes_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                    String s = bs.toStringUtf8();
                    passTimes_ = s;
                    return s;
                } else {
                    return (String)ref;
                }
            }

            /**
             * <code>string PassTimes = 33;</code>
             */
            public Builder setPassTimes(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                passTimes_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string PassTimes = 33;</code>
             */
            public com.google.protobuf.ByteString getPassTimesBytes() {
                Object ref = passTimes_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                    passTimes_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString)ref;
                }
            }

            /**
             * <code>string PassTimes = 33;</code>
             */
            public Builder setPassTimesBytes(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                passTimes_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string PassTimes = 33;</code>
             */
            public Builder clearPassTimes() {

                passTimes_ = getDefaultInstance().getPassTimes();
                onChanged();
                return this;
            }

            /**
             * <code>int32 BackupMark = 34;</code>
             */
            public int getBackupMark() {
                return backupMark_;
            }

            /**
             * <code>int32 BackupMark = 34;</code>
             */
            public Builder setBackupMark(int value) {

                backupMark_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>int32 BackupMark = 34;</code>
             */
            public Builder clearBackupMark() {

                backupMark_ = 0;
                onChanged();
                return this;
            }

            /**
             * <code>string PlateClassConfirm = 35;</code>
             */
            public String getPlateClassConfirm() {
                Object ref = plateClassConfirm_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                    String s = bs.toStringUtf8();
                    plateClassConfirm_ = s;
                    return s;
                } else {
                    return (String)ref;
                }
            }

            /**
             * <code>string PlateClassConfirm = 35;</code>
             */
            public Builder setPlateClassConfirm(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                plateClassConfirm_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string PlateClassConfirm = 35;</code>
             */
            public com.google.protobuf.ByteString getPlateClassConfirmBytes() {
                Object ref = plateClassConfirm_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                    plateClassConfirm_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString)ref;
                }
            }

            /**
             * <code>string PlateClassConfirm = 35;</code>
             */
            public Builder setPlateClassConfirmBytes(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                plateClassConfirm_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string PlateClassConfirm = 35;</code>
             */
            public Builder clearPlateClassConfirm() {

                plateClassConfirm_ = getDefaultInstance().getPlateClassConfirm();
                onChanged();
                return this;
            }

            /**
             * <code>string PlateColorConfirm = 36;</code>
             */
            public String getPlateColorConfirm() {
                Object ref = plateColorConfirm_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                    String s = bs.toStringUtf8();
                    plateColorConfirm_ = s;
                    return s;
                } else {
                    return (String)ref;
                }
            }

            /**
             * <code>string PlateColorConfirm = 36;</code>
             */
            public Builder setPlateColorConfirm(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                plateColorConfirm_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string PlateColorConfirm = 36;</code>
             */
            public com.google.protobuf.ByteString getPlateColorConfirmBytes() {
                Object ref = plateColorConfirm_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                    plateColorConfirm_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString)ref;
                }
            }

            /**
             * <code>string PlateColorConfirm = 36;</code>
             */
            public Builder setPlateColorConfirmBytes(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                plateColorConfirm_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string PlateColorConfirm = 36;</code>
             */
            public Builder clearPlateColorConfirm() {

                plateColorConfirm_ = getDefaultInstance().getPlateColorConfirm();
                onChanged();
                return this;
            }

            /**
             * <code>string PlateNoConfirm = 37;</code>
             */
            public String getPlateNoConfirm() {
                Object ref = plateNoConfirm_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                    String s = bs.toStringUtf8();
                    plateNoConfirm_ = s;
                    return s;
                } else {
                    return (String)ref;
                }
            }

            /**
             * <code>string PlateNoConfirm = 37;</code>
             */
            public Builder setPlateNoConfirm(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                plateNoConfirm_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string PlateNoConfirm = 37;</code>
             */
            public com.google.protobuf.ByteString getPlateNoConfirmBytes() {
                Object ref = plateNoConfirm_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                    plateNoConfirm_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString)ref;
                }
            }

            /**
             * <code>string PlateNoConfirm = 37;</code>
             */
            public Builder setPlateNoConfirmBytes(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                plateNoConfirm_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string PlateNoConfirm = 37;</code>
             */
            public Builder clearPlateNoConfirm() {

                plateNoConfirm_ = getDefaultInstance().getPlateNoConfirm();
                onChanged();
                return this;
            }

            /**
             * <code>int32 IllegalActConfirm = 38;</code>
             */
            public int getIllegalActConfirm() {
                return illegalActConfirm_;
            }

            /**
             * <code>int32 IllegalActConfirm = 38;</code>
             */
            public Builder setIllegalActConfirm(int value) {

                illegalActConfirm_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>int32 IllegalActConfirm = 38;</code>
             */
            public Builder clearIllegalActConfirm() {

                illegalActConfirm_ = 0;
                onChanged();
                return this;
            }

            /**
             * <code>string ErrcorInfo = 39;</code>
             */
            public String getErrcorInfo() {
                Object ref = errcorInfo_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                    String s = bs.toStringUtf8();
                    errcorInfo_ = s;
                    return s;
                } else {
                    return (String)ref;
                }
            }

            /**
             * <code>string ErrcorInfo = 39;</code>
             */
            public Builder setErrcorInfo(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                errcorInfo_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string ErrcorInfo = 39;</code>
             */
            public com.google.protobuf.ByteString getErrcorInfoBytes() {
                Object ref = errcorInfo_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                    errcorInfo_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString)ref;
                }
            }

            /**
             * <code>string ErrcorInfo = 39;</code>
             */
            public Builder setErrcorInfoBytes(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                errcorInfo_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string ErrcorInfo = 39;</code>
             */
            public Builder clearErrcorInfo() {

                errcorInfo_ = getDefaultInstance().getErrcorInfo();
                onChanged();
                return this;
            }

            /**
             * <code>string StdIllegalAct = 40;</code>
             */
            public String getStdIllegalAct() {
                Object ref = stdIllegalAct_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                    String s = bs.toStringUtf8();
                    stdIllegalAct_ = s;
                    return s;
                } else {
                    return (String)ref;
                }
            }

            /**
             * <code>string StdIllegalAct = 40;</code>
             */
            public Builder setStdIllegalAct(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                stdIllegalAct_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string StdIllegalAct = 40;</code>
             */
            public com.google.protobuf.ByteString getStdIllegalActBytes() {
                Object ref = stdIllegalAct_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                    stdIllegalAct_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString)ref;
                }
            }

            /**
             * <code>string StdIllegalAct = 40;</code>
             */
            public Builder setStdIllegalActBytes(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                stdIllegalAct_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string StdIllegalAct = 40;</code>
             */
            public Builder clearStdIllegalAct() {

                stdIllegalAct_ = getDefaultInstance().getStdIllegalAct();
                onChanged();
                return this;
            }

            /**
             * <code>string ConfirmPerson = 41;</code>
             */
            public String getConfirmPerson() {
                Object ref = confirmPerson_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                    String s = bs.toStringUtf8();
                    confirmPerson_ = s;
                    return s;
                } else {
                    return (String)ref;
                }
            }

            /**
             * <code>string ConfirmPerson = 41;</code>
             */
            public Builder setConfirmPerson(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                confirmPerson_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string ConfirmPerson = 41;</code>
             */
            public com.google.protobuf.ByteString getConfirmPersonBytes() {
                Object ref = confirmPerson_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                    confirmPerson_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString)ref;
                }
            }

            /**
             * <code>string ConfirmPerson = 41;</code>
             */
            public Builder setConfirmPersonBytes(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                confirmPerson_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string ConfirmPerson = 41;</code>
             */
            public Builder clearConfirmPerson() {

                confirmPerson_ = getDefaultInstance().getConfirmPerson();
                onChanged();
                return this;
            }

            /**
             * <code>string ConfirmUnit = 42;</code>
             */
            public String getConfirmUnit() {
                Object ref = confirmUnit_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                    String s = bs.toStringUtf8();
                    confirmUnit_ = s;
                    return s;
                } else {
                    return (String)ref;
                }
            }

            /**
             * <code>string ConfirmUnit = 42;</code>
             */
            public Builder setConfirmUnit(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                confirmUnit_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string ConfirmUnit = 42;</code>
             */
            public com.google.protobuf.ByteString getConfirmUnitBytes() {
                Object ref = confirmUnit_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                    confirmUnit_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString)ref;
                }
            }

            /**
             * <code>string ConfirmUnit = 42;</code>
             */
            public Builder setConfirmUnitBytes(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                confirmUnit_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string ConfirmUnit = 42;</code>
             */
            public Builder clearConfirmUnit() {

                confirmUnit_ = getDefaultInstance().getConfirmUnit();
                onChanged();
                return this;
            }

            /**
             * <code>string ConfirmComment = 43;</code>
             */
            public String getConfirmComment() {
                Object ref = confirmComment_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString)ref;
                    String s = bs.toStringUtf8();
                    confirmComment_ = s;
                    return s;
                } else {
                    return (String)ref;
                }
            }

            /**
             * <code>string ConfirmComment = 43;</code>
             */
            public Builder setConfirmComment(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                confirmComment_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string ConfirmComment = 43;</code>
             */
            public com.google.protobuf.ByteString getConfirmCommentBytes() {
                Object ref = confirmComment_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String)ref);
                    confirmComment_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString)ref;
                }
            }

            /**
             * <code>string ConfirmComment = 43;</code>
             */
            public Builder setConfirmCommentBytes(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                confirmComment_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string ConfirmComment = 43;</code>
             */
            public Builder clearConfirmComment() {

                confirmComment_ = getDefaultInstance().getConfirmComment();
                onChanged();
                return this;
            }

            /**
             * <code>uint64 ConfirmTime = 44;</code>
             */
            public long getConfirmTime() {
                return confirmTime_;
            }

            /**
             * <code>uint64 ConfirmTime = 44;</code>
             */
            public Builder setConfirmTime(long value) {

                confirmTime_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>uint64 ConfirmTime = 44;</code>
             */
            public Builder clearConfirmTime() {

                confirmTime_ = 0L;
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFieldsProto3(unknownFields);
            }

            public final Builder mergeUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }

            // @@protoc_insertion_point(builder_scope:IllegalRecord_Proto)
        }

    }

    // @@protoc_insertion_point(outer_class_scope)
}
